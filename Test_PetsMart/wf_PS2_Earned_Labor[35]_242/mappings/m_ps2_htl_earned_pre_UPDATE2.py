# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ./MappingUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_ps2_htl_earned_pre_UPDATE2")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_ps2_htl_earned_pre_UPDATE2", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PS2_HTL_EARNED_PRE_0


query_0 = f"""SELECT
  EARN_DAY_DT AS EARN_DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  WEEK_DT AS WEEK_DT,
  OVERNIGHT_KITTY_GUEST_CNT AS OVERNIGHT_KITTY_GUEST_CNT,
  OVERNIGHT_DOG_GUEST_CNT AS OVERNIGHT_DOG_GUEST_CNT,
  OVERNIGHT_TOTAL_GUEST_CNT AS OVERNIGHT_TOTAL_GUEST_CNT,
  DAY_CAMP_PLAYROOM_CNT AS DAY_CAMP_PLAYROOM_CNT,
  DAY_CARE_CNT AS DAY_CARE_CNT,
  OVERNIGHT_WITH_DDC_CNT AS OVERNIGHT_WITH_DDC_CNT,
  TOTAL_DAYCAMP_CNT AS TOTAL_DAYCAMP_CNT,
  TOTAL_GUEST_CNT AS TOTAL_GUEST_CNT,
  NIGHT_PETCARE_SPECIALIST_HRS AS NIGHT_PETCARE_SPECIALIST_HRS,
  FRONT_DESK_HRS AS FRONT_DESK_HRS,
  BACK_OF_HOUSE_HRS AS BACK_OF_HOUSE_HRS,
  SUPERVISOR_HRS AS SUPERVISOR_HRS,
  PLAYROOM_HRS AS PLAYROOM_HRS
FROM
  PS2_HTL_EARNED_PRE"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_PS2_HTL_EARNED_PRE_0")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_SALES_DAY_SKU_STORE_RPT_1


query_1 = f"""SELECT
  DAY_DT AS DAY_DT,
  PRODUCT_ID AS PRODUCT_ID,
  LOCATION_ID AS LOCATION_ID,
  SALES_CUST_CAPTURE_CD AS SALES_CUST_CAPTURE_CD,
  WEEK_DT AS WEEK_DT,
  FISCAL_YR AS FISCAL_YR,
  SKU_NBR AS SKU_NBR,
  STORE_NBR AS STORE_NBR,
  OPT_SALES_TYPE_ID AS OPT_SALES_TYPE_ID,
  VENDOR_ID AS VENDOR_ID,
  PROMO_FLAG AS PROMO_FLAG,
  STATUS_ID AS STATUS_ID,
  BRAND_NAME AS BRAND_NAME,
  OWNBRAND_FLAG AS OWNBRAND_FLAG,
  SKU_VEND_TXN_CNT AS SKU_VEND_TXN_CNT,
  NET_SALES_AMT AS NET_SALES_AMT,
  NET_SALES_QTY AS NET_SALES_QTY,
  NET_MARGIN_AMT AS NET_MARGIN_AMT,
  SALES_AMT AS SALES_AMT,
  SALES_COST AS SALES_COST,
  SALES_QTY AS SALES_QTY,
  RETURN_AMT AS RETURN_AMT,
  RETURN_COST AS RETURN_COST,
  RETURN_QTY AS RETURN_QTY,
  CLEARANCE_AMT AS CLEARANCE_AMT,
  CLEARANCE_QTY AS CLEARANCE_QTY,
  CLEARANCE_RETURN_AMT AS CLEARANCE_RETURN_AMT,
  CLEARANCE_RETURN_QTY AS CLEARANCE_RETURN_QTY,
  DISCOUNT_AMT AS DISCOUNT_AMT,
  DISCOUNT_QTY AS DISCOUNT_QTY,
  DISCOUNT_RETURN_AMT AS DISCOUNT_RETURN_AMT,
  DISCOUNT_RETURN_QTY AS DISCOUNT_RETURN_QTY,
  POS_COUPON_AMT AS POS_COUPON_AMT,
  POS_COUPON_QTY AS POS_COUPON_QTY,
  SPECIAL_SALES_AMT AS SPECIAL_SALES_AMT,
  SPECIAL_SALES_QTY AS SPECIAL_SALES_QTY,
  SPECIAL_RETURN_AMT AS SPECIAL_RETURN_AMT,
  SPECIAL_RETURN_QTY AS SPECIAL_RETURN_QTY,
  SPECIAL_SRVC_AMT AS SPECIAL_SRVC_AMT,
  SPECIAL_SRVC_QTY AS SPECIAL_SRVC_QTY,
  MA_SALES_AMT AS MA_SALES_AMT,
  MA_SALES_QTY AS MA_SALES_QTY,
  MA_TRANS_AMT AS MA_TRANS_AMT,
  MA_TRANS_COST AS MA_TRANS_COST,
  MA_TRANS_QTY AS MA_TRANS_QTY,
  EXCH_RATE_PCT AS EXCH_RATE_PCT,
  UPDATE_DT AS UPDATE_DT,
  LOAD_DT AS LOAD_DT
FROM
  SALES_DAY_SKU_STORE_RPT"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("Shortcut_to_SALES_DAY_SKU_STORE_RPT_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_SKU_PROFILE_2


query_2 = f"""SELECT
  PRODUCT_ID AS PRODUCT_ID,
  SKU_NBR AS SKU_NBR,
  SKU_TYPE AS SKU_TYPE,
  PRIMARY_UPC_ID AS PRIMARY_UPC_ID,
  STATUS_ID AS STATUS_ID,
  SUBS_HIST_FLAG AS SUBS_HIST_FLAG,
  SUBS_CURR_FLAG AS SUBS_CURR_FLAG,
  SKU_DESC AS SKU_DESC,
  ALT_DESC AS ALT_DESC,
  SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
  SAP_CLASS_ID AS SAP_CLASS_ID,
  SAP_DEPT_ID AS SAP_DEPT_ID,
  SAP_DIVISION_ID AS SAP_DIVISION_ID,
  PRIMARY_VENDOR_ID AS PRIMARY_VENDOR_ID,
  PARENT_VENDOR_ID AS PARENT_VENDOR_ID,
  COUNTRY_CD AS COUNTRY_CD,
  IMPORT_FLAG AS IMPORT_FLAG,
  HTS_CODE_ID AS HTS_CODE_ID,
  CONTENTS AS CONTENTS,
  CONTENTS_UNITS AS CONTENTS_UNITS,
  WEIGHT_NET_AMT AS WEIGHT_NET_AMT,
  WEIGHT_UOM_CD AS WEIGHT_UOM_CD,
  SIZE_DESC AS SIZE_DESC,
  BUM_QTY AS BUM_QTY,
  UOM_CD AS UOM_CD,
  UNIT_NUMERATOR AS UNIT_NUMERATOR,
  UNIT_DENOMINATOR AS UNIT_DENOMINATOR,
  BUYER_ID AS BUYER_ID,
  PURCH_GROUP_ID AS PURCH_GROUP_ID,
  PURCH_COST_AMT AS PURCH_COST_AMT,
  NAT_PRICE_US_AMT AS NAT_PRICE_US_AMT,
  TAX_CLASS_ID AS TAX_CLASS_ID,
  VALUATION_CLASS_CD AS VALUATION_CLASS_CD,
  BRAND_CD AS BRAND_CD,
  BRAND_CLASSIFICATION_ID AS BRAND_CLASSIFICATION_ID,
  OWNBRAND_FLAG AS OWNBRAND_FLAG,
  STATELINE_FLAG AS STATELINE_FLAG,
  SIGN_TYPE_CD AS SIGN_TYPE_CD,
  OLD_ARTICLE_NBR AS OLD_ARTICLE_NBR,
  VENDOR_ARTICLE_NBR AS VENDOR_ARTICLE_NBR,
  INIT_MKDN_DT AS INIT_MKDN_DT,
  DISC_START_DT AS DISC_START_DT,
  ADD_DT AS ADD_DT,
  DELETE_DT AS DELETE_DT,
  UPDATE_DT AS UPDATE_DT,
  FIRST_SALE_DT AS FIRST_SALE_DT,
  LAST_SALE_DT AS LAST_SALE_DT,
  FIRST_INV_DT AS FIRST_INV_DT,
  LAST_INV_DT AS LAST_INV_DT,
  LOAD_DT AS LOAD_DT,
  BASE_NBR AS BASE_NBR,
  BP_COLOR_ID AS BP_COLOR_ID,
  BP_SIZE_ID AS BP_SIZE_ID,
  BP_BREED_ID AS BP_BREED_ID,
  BP_ITEM_CONCATENATED AS BP_ITEM_CONCATENATED,
  BP_AEROSOL_FLAG AS BP_AEROSOL_FLAG,
  BP_HAZMAT_FLAG AS BP_HAZMAT_FLAG,
  CANADIAN_HTS_CD AS CANADIAN_HTS_CD,
  NAT_PRICE_CA_AMT AS NAT_PRICE_CA_AMT,
  NAT_PRICE_PR_AMT AS NAT_PRICE_PR_AMT,
  RTV_DEPT_CD AS RTV_DEPT_CD,
  GL_ACCT_NBR AS GL_ACCT_NBR,
  ARTICLE_CATEGORY_ID AS ARTICLE_CATEGORY_ID,
  COMPONENT_FLAG AS COMPONENT_FLAG,
  ZDISCO_SCHED_TYPE_ID AS ZDISCO_SCHED_TYPE_ID,
  ZDISCO_MKDN_SCHED_ID AS ZDISCO_MKDN_SCHED_ID,
  ZDISCO_PID_DT AS ZDISCO_PID_DT,
  ZDISCO_START_DT AS ZDISCO_START_DT,
  ZDISCO_INIT_MKDN_DT AS ZDISCO_INIT_MKDN_DT,
  ZDISCO_DC_DT AS ZDISCO_DC_DT,
  ZDISCO_STR_DT AS ZDISCO_STR_DT,
  ZDISCO_STR_OWNRSHP_DT AS ZDISCO_STR_OWNRSHP_DT,
  ZDISCO_STR_WRT_OFF_DT AS ZDISCO_STR_WRT_OFF_DT
FROM
  SKU_PROFILE"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_SKU_PROFILE_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_SALES_DAY_SKU_STORE_RPT_3


query_3 = f"""SELECT
  Shortcut_to_SALES_DAY_SKU_STORE_RPT_1.DAY_DT AS DAY_DT,
  Shortcut_to_SALES_DAY_SKU_STORE_RPT_1.LOCATION_ID AS LOCATION_ID,
  Shortcut_to_SALES_DAY_SKU_STORE_RPT_1.SALES_QTY AS SALES_QTY,
  Shortcut_to_SKU_PROFILE_2.SAP_CATEGORY_ID AS SAP_CATEGORY_ID,
  Shortcut_to_SKU_PROFILE_2.SAP_CLASS_ID AS SAP_CLASS_ID,
  Shortcut_to_PS2_HTL_EARNED_PRE_0.EARN_DAY_DT AS EARN_DAY_DT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_PS2_HTL_EARNED_PRE_0,
  Shortcut_to_SKU_PROFILE_2,
  Shortcut_to_SALES_DAY_SKU_STORE_RPT_1
WHERE
  Shortcut_to_SALES_DAY_SKU_STORE_RPT_1.PRODUCT_ID = Shortcut_to_SKU_PROFILE_2.PRODUCT_ID
  AND Shortcut_to_SALES_DAY_SKU_STORE_RPT_1.SKU_NBR = Shortcut_to_SKU_PROFILE_2.SKU_NBR
  AND Shortcut_to_PS2_HTL_EARNED_PRE_0.EARN_DAY_DT = Shortcut_to_SALES_DAY_SKU_STORE_RPT_1.DAY_DT
  AND Shortcut_to_PS2_HTL_EARNED_PRE_0.LOCATION_ID = Shortcut_to_SALES_DAY_SKU_STORE_RPT_1.LOCATION_ID
  AND Shortcut_to_SALES_DAY_SKU_STORE_RPT_1.FISCAL_YR >= 2012
  AND (
    Shortcut_to_SKU_PROFILE_2.SAP_CLASS_ID IN (4921, 4913) --Remove Class 822
    OR Shortcut_to_SKU_PROFILE_2.SAP_CATEGORY_ID IN (822001, 822002, 822003) --Adding Category
  )
  AND Shortcut_to_SALES_DAY_SKU_STORE_RPT_1.DAY_DT < current_date"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_SALES_DAY_SKU_STORE_RPT_3")

# COMMAND ----------
# DBTITLE 1, AGG_SumDayCare_4


query_4 = f"""SELECT
  DAY_DT AS DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  SUM(
    IFF(
      SAP_CLASS_ID = 4921
      OR SAP_CATEGORY_ID = 822002
      OR SAP_CATEGORY_ID = 822003,
      SALES_QTY,
      0
    )
  ) AS DAY_CAMP_CNT,
  SUM(
    IFF(
      SAP_CLASS_ID = 4913
      or SAP_CATEGORY_ID = 822001,
      SALES_QTY,
      0
    )
  ) AS BACK_OF_HOUSE_CNT,
  last(Monotonically_Increasing_Id) AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_SALES_DAY_SKU_STORE_RPT_3
GROUP BY
  DAY_DT,
  LOCATION_ID"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("AGG_SumDayCare_4")

# COMMAND ----------
# DBTITLE 1, UPD_OnlyUpdate_5


query_5 = f"""SELECT
  DAY_DT AS DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  DAY_CAMP_CNT AS DAY_CAMP_CNT,
  BACK_OF_HOUSE_CNT AS BACK_OF_HOUSE_CNT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  AGG_SumDayCare_4"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("UPD_OnlyUpdate_5")

# COMMAND ----------
# DBTITLE 1, PS2_HTL_EARNED_PRE


spark.sql("""MERGE INTO PS2_HTL_EARNED_PRE AS TARGET
USING
  UPD_OnlyUpdate_5 AS SOURCE ON TARGET.LOCATION_ID = SOURCE.LOCATION_ID
  AND TARGET.EARN_DAY_DT = SOURCE.DAY_DT
  WHEN MATCHED THEN
UPDATE
SET
  TARGET.EARN_DAY_DT = SOURCE.DAY_DT,
  TARGET.LOCATION_ID = SOURCE.LOCATION_ID,
  TARGET.DAY_CAMP_PLAYROOM_CNT = SOURCE.DAY_CAMP_CNT,
  TARGET.DAY_CARE_CNT = SOURCE.BACK_OF_HOUSE_CNT""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_ps2_htl_earned_pre_UPDATE2")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_ps2_htl_earned_pre_UPDATE2", mainWorkflowId, parentName)
