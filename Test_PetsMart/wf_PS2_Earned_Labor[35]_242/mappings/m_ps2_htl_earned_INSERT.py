# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ./MappingUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_ps2_htl_earned_INSERT")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_ps2_htl_earned_INSERT", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PS2_HTL_EARN_WAGE_PRE_0


query_0 = f"""SELECT
  WEEK_DT AS WEEK_DT,
  LOCATION_ID AS LOCATION_ID,
  STORE_NBR AS STORE_NBR,
  BUSINESS_TYPE AS BUSINESS_TYPE,
  ADJUSTED_AMT AS ADJUSTED_AMT,
  ADJUSTED_HRS AS ADJUSTED_HRS,
  ACTUAL_AMT AS ACTUAL_AMT,
  ACTUAL_HRS AS ACTUAL_HRS
FROM
  PS2_HTL_EARN_WAGE_PRE"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_PS2_HTL_EARN_WAGE_PRE_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_PS2_HTL_EARN_WAGE_PRE_1


query_1 = f"""SELECT
  WEEK_DT AS WEEK_DT,
  LOCATION_ID AS LOCATION_ID,
  ADJUSTED_AMT AS ADJUSTED_AMT,
  ADJUSTED_HRS AS ADJUSTED_HRS,
  ACTUAL_AMT AS ACTUAL_AMT,
  ACTUAL_HRS AS ACTUAL_HRS,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_PS2_HTL_EARN_WAGE_PRE_0
WHERE
  Shortcut_to_PS2_HTL_EARN_WAGE_PRE_0.BUSINESS_TYPE = 'HOTEL'"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_PS2_HTL_EARN_WAGE_PRE_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PS2_HTL_EARNED_PRE_2


query_2 = f"""SELECT
  EARN_DAY_DT AS EARN_DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  WEEK_DT AS WEEK_DT,
  OVERNIGHT_KITTY_GUEST_CNT AS OVERNIGHT_KITTY_GUEST_CNT,
  OVERNIGHT_DOG_GUEST_CNT AS OVERNIGHT_DOG_GUEST_CNT,
  OVERNIGHT_TOTAL_GUEST_CNT AS OVERNIGHT_TOTAL_GUEST_CNT,
  DAY_CAMP_PLAYROOM_CNT AS DAY_CAMP_PLAYROOM_CNT,
  DAY_CARE_CNT AS DAY_CARE_CNT,
  OVERNIGHT_WITH_DDC_CNT AS OVERNIGHT_WITH_DDC_CNT,
  TOTAL_DAYCAMP_CNT AS TOTAL_DAYCAMP_CNT,
  TOTAL_GUEST_CNT AS TOTAL_GUEST_CNT,
  NIGHT_PETCARE_SPECIALIST_HRS AS NIGHT_PETCARE_SPECIALIST_HRS,
  FRONT_DESK_HRS AS FRONT_DESK_HRS,
  BACK_OF_HOUSE_HRS AS BACK_OF_HOUSE_HRS,
  SUPERVISOR_HRS AS SUPERVISOR_HRS,
  PLAYROOM_HRS AS PLAYROOM_HRS
FROM
  PS2_HTL_EARNED_PRE"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_PS2_HTL_EARNED_PRE_2")

# COMMAND ----------
# DBTITLE 1, Shortcut_To_DAYS_3


query_3 = f"""SELECT
  DAY_DT AS DAY_DT,
  BUSINESS_DAY_FLAG AS BUSINESS_DAY_FLAG,
  HOLIDAY_FLAG AS HOLIDAY_FLAG,
  DAY_OF_WK_NAME AS DAY_OF_WK_NAME,
  DAY_OF_WK_NAME_ABBR AS DAY_OF_WK_NAME_ABBR,
  DAY_OF_WK_NBR AS DAY_OF_WK_NBR,
  CAL_DAY_OF_MO_NBR AS CAL_DAY_OF_MO_NBR,
  CAL_DAY_OF_YR_NBR AS CAL_DAY_OF_YR_NBR,
  CAL_WK AS CAL_WK,
  CAL_WK_NBR AS CAL_WK_NBR,
  CAL_MO AS CAL_MO,
  CAL_MO_NBR AS CAL_MO_NBR,
  CAL_MO_NAME AS CAL_MO_NAME,
  CAL_MO_NAME_ABBR AS CAL_MO_NAME_ABBR,
  CAL_QTR AS CAL_QTR,
  CAL_QTR_NBR AS CAL_QTR_NBR,
  CAL_HALF AS CAL_HALF,
  CAL_YR AS CAL_YR,
  FISCAL_DAY_OF_MO_NBR AS FISCAL_DAY_OF_MO_NBR,
  FISCAL_DAY_OF_YR_NBR AS FISCAL_DAY_OF_YR_NBR,
  FISCAL_WK AS FISCAL_WK,
  FISCAL_WK_NBR AS FISCAL_WK_NBR,
  FISCAL_MO AS FISCAL_MO,
  FISCAL_MO_NBR AS FISCAL_MO_NBR,
  FISCAL_MO_NAME AS FISCAL_MO_NAME,
  FISCAL_MO_NAME_ABBR AS FISCAL_MO_NAME_ABBR,
  FISCAL_QTR AS FISCAL_QTR,
  FISCAL_QTR_NBR AS FISCAL_QTR_NBR,
  FISCAL_HALF AS FISCAL_HALF,
  FISCAL_YR AS FISCAL_YR,
  LYR_WEEK_DT AS LYR_WEEK_DT,
  LWK_WEEK_DT AS LWK_WEEK_DT,
  WEEK_DT AS WEEK_DT,
  EST_TIME_CONV_AMT AS EST_TIME_CONV_AMT,
  EST_TIME_CONV_HRS AS EST_TIME_CONV_HRS,
  ES0_TIME_CONV_AMT AS ES0_TIME_CONV_AMT,
  ES0_TIME_CONV_HRS AS ES0_TIME_CONV_HRS,
  CST_TIME_CONV_AMT AS CST_TIME_CONV_AMT,
  CST_TIME_CONV_HRS AS CST_TIME_CONV_HRS,
  CS0_TIME_CONV_AMT AS CS0_TIME_CONV_AMT,
  CS0_TIME_CONV_HRS AS CS0_TIME_CONV_HRS,
  MST_TIME_CONV_AMT AS MST_TIME_CONV_AMT,
  MST_TIME_CONV_HRS AS MST_TIME_CONV_HRS,
  MS0_TIME_CONV_AMT AS MS0_TIME_CONV_AMT,
  MS0_TIME_CONV_HRS AS MS0_TIME_CONV_HRS,
  PST_TIME_CONV_AMT AS PST_TIME_CONV_AMT,
  PST_TIME_CONV_HRS AS PST_TIME_CONV_HRS
FROM
  DAYS"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("Shortcut_To_DAYS_3")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_SITE_PROFILE_4


query_4 = f"""SELECT
  LOCATION_ID AS LOCATION_ID,
  LOCATION_TYPE_ID AS LOCATION_TYPE_ID,
  STORE_NBR AS STORE_NBR,
  STORE_NAME AS STORE_NAME,
  STORE_TYPE_ID AS STORE_TYPE_ID,
  STORE_OPEN_CLOSE_FLAG AS STORE_OPEN_CLOSE_FLAG,
  COMPANY_ID AS COMPANY_ID,
  REGION_ID AS REGION_ID,
  DISTRICT_ID AS DISTRICT_ID,
  PRICE_ZONE_ID AS PRICE_ZONE_ID,
  PRICE_AD_ZONE_ID AS PRICE_AD_ZONE_ID,
  REPL_DC_NBR AS REPL_DC_NBR,
  REPL_FISH_DC_NBR AS REPL_FISH_DC_NBR,
  REPL_FWD_DC_NBR AS REPL_FWD_DC_NBR,
  SQ_FEET_RETAIL AS SQ_FEET_RETAIL,
  SQ_FEET_TOTAL AS SQ_FEET_TOTAL,
  SITE_ADDRESS AS SITE_ADDRESS,
  SITE_CITY AS SITE_CITY,
  STATE_CD AS STATE_CD,
  COUNTRY_CD AS COUNTRY_CD,
  POSTAL_CD AS POSTAL_CD,
  SITE_MAIN_TELE_NO AS SITE_MAIN_TELE_NO,
  SITE_GROOM_TELE_NO AS SITE_GROOM_TELE_NO,
  SITE_EMAIL_ADDRESS AS SITE_EMAIL_ADDRESS,
  SITE_SALES_FLAG AS SITE_SALES_FLAG,
  EQUINE_MERCH_ID AS EQUINE_MERCH_ID,
  EQUINE_SITE_ID AS EQUINE_SITE_ID,
  EQUINE_SITE_OPEN_DT AS EQUINE_SITE_OPEN_DT,
  GEO_LATITUDE_NBR AS GEO_LATITUDE_NBR,
  GEO_LONGITUDE_NBR AS GEO_LONGITUDE_NBR,
  PETSMART_DMA_CD AS PETSMART_DMA_CD,
  LOYALTY_PGM_TYPE_ID AS LOYALTY_PGM_TYPE_ID,
  LOYALTY_PGM_STATUS_ID AS LOYALTY_PGM_STATUS_ID,
  LOYALTY_PGM_START_DT AS LOYALTY_PGM_START_DT,
  LOYALTY_PGM_CHANGE_DT AS LOYALTY_PGM_CHANGE_DT,
  BP_COMPANY_NBR AS BP_COMPANY_NBR,
  BP_GL_ACCT AS BP_GL_ACCT,
  TP_LOC_FLAG AS TP_LOC_FLAG,
  TP_ACTIVE_CNT AS TP_ACTIVE_CNT,
  PROMO_LABEL_CD AS PROMO_LABEL_CD,
  PARENT_LOCATION_ID AS PARENT_LOCATION_ID,
  LOCATION_NBR AS LOCATION_NBR,
  TIME_ZONE_ID AS TIME_ZONE_ID,
  DELV_SERVICE_CLASS_ID AS DELV_SERVICE_CLASS_ID,
  PICK_SERVICE_CLASS_ID AS PICK_SERVICE_CLASS_ID,
  SITE_LOGIN_ID AS SITE_LOGIN_ID,
  SITE_MANAGER_ID AS SITE_MANAGER_ID,
  SITE_OPEN_YRS_AMT AS SITE_OPEN_YRS_AMT,
  HOTEL_FLAG AS HOTEL_FLAG,
  DAYCAMP_FLAG AS DAYCAMP_FLAG,
  VET_FLAG AS VET_FLAG,
  DIST_MGR_NAME AS DIST_MGR_NAME,
  DIST_SVC_MGR_NAME AS DIST_SVC_MGR_NAME,
  REGION_VP_NAME AS REGION_VP_NAME,
  REGION_TRAINER_NAME AS REGION_TRAINER_NAME,
  ASSET_PROTECT_NAME AS ASSET_PROTECT_NAME,
  SITE_COUNTY AS SITE_COUNTY,
  SITE_FAX_NO AS SITE_FAX_NO,
  SFT_OPEN_DT AS SFT_OPEN_DT,
  DM_EMAIL_ADDRESS AS DM_EMAIL_ADDRESS,
  DSM_EMAIL_ADDRESS AS DSM_EMAIL_ADDRESS,
  RVP_EMAIL_ADDRESS AS RVP_EMAIL_ADDRESS,
  TRADE_AREA AS TRADE_AREA,
  FDLPS_NAME AS FDLPS_NAME,
  FDLPS_EMAIL AS FDLPS_EMAIL,
  OVERSITE_MGR_NAME AS OVERSITE_MGR_NAME,
  OVERSITE_MGR_EMAIL AS OVERSITE_MGR_EMAIL,
  SAFETY_DIRECTOR_NAME AS SAFETY_DIRECTOR_NAME,
  SAFETY_DIRECTOR_EMAIL AS SAFETY_DIRECTOR_EMAIL,
  RETAIL_MANAGER_SAFETY_NAME AS RETAIL_MANAGER_SAFETY_NAME,
  RETAIL_MANAGER_SAFETY_EMAIL AS RETAIL_MANAGER_SAFETY_EMAIL,
  AREA_DIRECTOR_NAME AS AREA_DIRECTOR_NAME,
  AREA_DIRECTOR_EMAIL AS AREA_DIRECTOR_EMAIL,
  DC_GENERAL_MANAGER_NAME AS DC_GENERAL_MANAGER_NAME,
  DC_GENERAL_MANAGER_EMAIL AS DC_GENERAL_MANAGER_EMAIL,
  ASST_DC_GENERAL_MANAGER_NAME1 AS ASST_DC_GENERAL_MANAGER_NAME1,
  ASST_DC_GENERAL_MANAGER_EMAIL1 AS ASST_DC_GENERAL_MANAGER_EMAIL1,
  ASST_DC_GENERAL_MANAGER_NAME2 AS ASST_DC_GENERAL_MANAGER_NAME2,
  ASST_DC_GENERAL_MANAGER_EMAIL2 AS ASST_DC_GENERAL_MANAGER_EMAIL2,
  REGIONAL_DC_SAFETY_MGR_NAME AS REGIONAL_DC_SAFETY_MGR_NAME,
  REGIONAL_DC_SAFETY_MGR_EMAIL AS REGIONAL_DC_SAFETY_MGR_EMAIL,
  DC_PEOPLE_SUPERVISOR_NAME AS DC_PEOPLE_SUPERVISOR_NAME,
  DC_PEOPLE_SUPERVISOR_EMAIL AS DC_PEOPLE_SUPERVISOR_EMAIL,
  PEOPLE_MANAGER_NAME AS PEOPLE_MANAGER_NAME,
  PEOPLE_MANAGER_EMAIL AS PEOPLE_MANAGER_EMAIL,
  ASSET_PROT_DIR_NAME AS ASSET_PROT_DIR_NAME,
  ASSET_PROT_DIR_EMAIL AS ASSET_PROT_DIR_EMAIL,
  SR_REG_ASSET_PROT_MGR_NAME AS SR_REG_ASSET_PROT_MGR_NAME,
  SR_REG_ASSET_PROT_MGR_EMAIL AS SR_REG_ASSET_PROT_MGR_EMAIL,
  REG_ASSET_PROT_MGR_NAME AS REG_ASSET_PROT_MGR_NAME,
  REG_ASSET_PROT_MGR_EMAIL AS REG_ASSET_PROT_MGR_EMAIL,
  ASSET_PROTECT_EMAIL AS ASSET_PROTECT_EMAIL,
  TP_START_DT AS TP_START_DT,
  OPEN_DT AS OPEN_DT,
  GR_OPEN_DT AS GR_OPEN_DT,
  CLOSE_DT AS CLOSE_DT,
  HOTEL_OPEN_DT AS HOTEL_OPEN_DT,
  ADD_DT AS ADD_DT,
  DELETE_DT AS DELETE_DT,
  UPDATE_DT AS UPDATE_DT,
  LOAD_DT AS LOAD_DT
FROM
  SITE_PROFILE"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("Shortcut_to_SITE_PROFILE_4")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_PS2_HTL_EARNED_PRE_5


query_5 = f"""SELECT
  Shortcut_to_PS2_HTL_EARNED_PRE_2.EARN_DAY_DT AS EARN_DAY_DT,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.LOCATION_ID AS LOCATION_ID,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.WEEK_DT AS WEEK_DT,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.OVERNIGHT_KITTY_GUEST_CNT AS OVERNIGHT_KITTY_GUEST_CNT,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.OVERNIGHT_DOG_GUEST_CNT AS OVERNIGHT_DOG_GUEST_CNT,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.OVERNIGHT_TOTAL_GUEST_CNT AS OVERNIGHT_TOTAL_GUEST_CNT,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.DAY_CAMP_PLAYROOM_CNT AS DAY_CAMP_PLAYROOM_CNT,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.DAY_CARE_CNT AS DAY_CARE_CNT,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.OVERNIGHT_WITH_DDC_CNT AS OVERNIGHT_WITH_DDC_CNT,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.TOTAL_DAYCAMP_CNT AS TOTAL_DAYCAMP_CNT,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.TOTAL_GUEST_CNT AS TOTAL_GUEST_CNT,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.NIGHT_PETCARE_SPECIALIST_HRS AS NIGHT_PETCARE_SPECIALIST_HRS,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.FRONT_DESK_HRS AS FRONT_DESK_HRS,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.BACK_OF_HOUSE_HRS AS BACK_OF_HOUSE_HRS,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.SUPERVISOR_HRS AS SUPERVISOR_HRS,
  Shortcut_to_PS2_HTL_EARNED_PRE_2.PLAYROOM_HRS AS PLAYROOM_HRS,
  Shortcut_To_DAYS_3.FISCAL_WK AS FISCAL_WK,
  Shortcut_To_DAYS_3.FISCAL_MO AS FISCAL_MO,
  Shortcut_To_DAYS_3.FISCAL_YR AS FISCAL_YR,
  Shortcut_to_SITE_PROFILE_4.STORE_NBR AS STORE_NBR,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_SITE_PROFILE_4,
  Shortcut_To_DAYS_3,
  Shortcut_to_PS2_HTL_EARNED_PRE_2
WHERE
  Shortcut_to_PS2_HTL_EARNED_PRE_2.EARN_DAY_DT = Shortcut_To_DAYS_3.DAY_DT
  AND Shortcut_to_PS2_HTL_EARNED_PRE_2.LOCATION_ID = Shortcut_to_SITE_PROFILE_4.LOCATION_ID"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("SQ_Shortcut_to_PS2_HTL_EARNED_PRE_5")

# COMMAND ----------
# DBTITLE 1, JNR_LeftJoin_6


query_6 = f"""SELECT
  DETAIL.EARN_DAY_DT AS EARN_DAY_DT,
  DETAIL.LOCATION_ID AS LOCATION_ID,
  DETAIL.WEEK_DT AS WEEK_DT,
  DETAIL.OVERNIGHT_KITTY_GUEST_CNT AS OVERNIGHT_KITTY_GUEST_CNT,
  DETAIL.OVERNIGHT_DOG_GUEST_CNT AS OVERNIGHT_DOG_GUEST_CNT,
  DETAIL.OVERNIGHT_TOTAL_GUEST_CNT AS OVERNIGHT_TOTAL_GUEST_CNT,
  DETAIL.DAY_CAMP_PLAYROOM_CNT AS DAY_CAMP_PLAYROOM_CNT,
  DETAIL.DAY_CARE_CNT AS DAY_CARE_CNT,
  DETAIL.OVERNIGHT_WITH_DDC_CNT AS OVERNIGHT_WITH_DDC_CNT,
  DETAIL.TOTAL_DAYCAMP_CNT AS TOTAL_DAYCAMP_CNT,
  DETAIL.TOTAL_GUEST_CNT AS TOTAL_GUEST_CNT,
  DETAIL.NIGHT_PETCARE_SPECIALIST_HRS AS NIGHT_PETCARE_SPECIALIST_HRS,
  DETAIL.FRONT_DESK_HRS AS FRONT_DESK_HRS,
  DETAIL.BACK_OF_HOUSE_HRS AS BACK_OF_HOUSE_HRS,
  DETAIL.SUPERVISOR_HRS AS SUPERVISOR_HRS,
  DETAIL.PLAYROOM_HRS AS PLAYROOM_HRS,
  DETAIL.FISCAL_WK AS FISCAL_WK,
  DETAIL.FISCAL_MO AS FISCAL_MO,
  DETAIL.FISCAL_YR AS FISCAL_YR,
  DETAIL.STORE_NBR AS STORE_NBR,
  MASTER.ADJUSTED_AMT AS M_ADJUSTED_AMT,
  MASTER.ADJUSTED_HRS AS M_ADJUSTED_HRS,
  MASTER.ACTUAL_AMT AS M_ACTUAL_AMT,
  MASTER.ACTUAL_HRS AS M_ACTUAL_HRS,
  DETAIL.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_PS2_HTL_EARN_WAGE_PRE_1 MASTER
  RIGHT JOIN SQ_Shortcut_to_PS2_HTL_EARNED_PRE_5 DETAIL ON MASTER.WEEK_DT = DETAIL.WEEK_DT
  AND MASTER.LOCATION_ID = DETAIL.LOCATION_ID"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("JNR_LeftJoin_6")

# COMMAND ----------
# DBTITLE 1, EXP_DerivedColumns_7


query_7 = f"""SELECT
  EARN_DAY_DT AS EARN_DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  WEEK_DT AS WEEK_DT,
  OVERNIGHT_KITTY_GUEST_CNT AS OVERNIGHT_KITTY_GUEST_CNT,
  OVERNIGHT_DOG_GUEST_CNT AS OVERNIGHT_DOG_GUEST_CNT,
  OVERNIGHT_TOTAL_GUEST_CNT AS OVERNIGHT_TOTAL_GUEST_CNT,
  DAY_CAMP_PLAYROOM_CNT AS DAY_CAMP_PLAYROOM_CNT,
  DAY_CARE_CNT AS DAY_CARE_CNT,
  OVERNIGHT_WITH_DDC_CNT AS OVERNIGHT_WITH_DDC_CNT,
  TOTAL_DAYCAMP_CNT AS TOTAL_DAYCAMP_CNT,
  TOTAL_GUEST_CNT AS TOTAL_GUEST_CNT,
  NIGHT_PETCARE_SPECIALIST_HRS AS NIGHT_PETCARE_SPECIALIST_HRS,
  FRONT_DESK_HRS AS FRONT_DESK_HRS,
  BACK_OF_HOUSE_HRS AS BACK_OF_HOUSE_HRS,
  SUPERVISOR_HRS AS SUPERVISOR_HRS,
  PLAYROOM_HRS AS PLAYROOM_HRS,
  FISCAL_WK AS FISCAL_WK,
  FISCAL_MO AS FISCAL_MO,
  FISCAL_YR AS FISCAL_YR,
  STORE_NBR AS STORE_NBR,
  IFF(ISNULL(M_ADJUSTED_AMT), 0, M_ADJUSTED_AMT) AS M_ADJUSTED_AMT_NOTNULL,
  IFF(ISNULL(M_ADJUSTED_HRS), 0, M_ADJUSTED_HRS) AS M_ADJUSTED_HRS_NOTNULL,
  IFF(ISNULL(M_ACTUAL_AMT), 0, M_ACTUAL_AMT) AS M_ACTUAL_AMT_NOTNULL,
  IFF(ISNULL(M_ACTUAL_HRS), 0, M_ACTUAL_HRS) AS M_ACTUAL_HRS_NOTNULL,
  NIGHT_PETCARE_SPECIALIST_HRS + FRONT_DESK_HRS + BACK_OF_HOUSE_HRS + SUPERVISOR_HRS + PLAYROOM_HRS AS TOTAL_EARNED_HRS,
  IFF(
    (
      IFF(ISNULL(M_ACTUAL_HRS), 0, M_ACTUAL_HRS) + IFF(ISNULL(M_ADJUSTED_HRS), 0, M_ADJUSTED_HRS)
    ) <> 0,
    Round(
      (
        IFF(ISNULL(M_ACTUAL_AMT), 0, M_ACTUAL_AMT) + IFF(ISNULL(M_ADJUSTED_AMT), 0, M_ADJUSTED_AMT)
      ) / (
        IFF(ISNULL(M_ACTUAL_HRS), 0, M_ACTUAL_HRS) + IFF(ISNULL(M_ADJUSTED_HRS), 0, M_ADJUSTED_HRS)
      ),
      2
    ),
    0
  ) AS EARNED_LOC_AMT,
  ROUND(
    (
      NIGHT_PETCARE_SPECIALIST_HRS + FRONT_DESK_HRS + BACK_OF_HOUSE_HRS + SUPERVISOR_HRS + PLAYROOM_HRS
    ) * (
      IFF(
        (
          IFF(ISNULL(M_ACTUAL_HRS), 0, M_ACTUAL_HRS) + IFF(ISNULL(M_ADJUSTED_HRS), 0, M_ADJUSTED_HRS)
        ) <> 0,
        (
          IFF(ISNULL(M_ACTUAL_AMT), 0, M_ACTUAL_AMT) + IFF(ISNULL(M_ADJUSTED_AMT), 0, M_ADJUSTED_AMT)
        ) / (
          IFF(ISNULL(M_ACTUAL_HRS), 0, M_ACTUAL_HRS) + IFF(ISNULL(M_ADJUSTED_HRS), 0, M_ADJUSTED_HRS)
        ),
        0
      )
    ),
    2
  ) AS TOTAL_EARNED_AMT,
  now() AS LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_LeftJoin_6"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("EXP_DerivedColumns_7")

# COMMAND ----------
# DBTITLE 1, FIL_RemoveCurrentWeek_8


query_8 = f"""SELECT
  EARN_DAY_DT AS EARN_DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  WEEK_DT AS WEEK_DT,
  OVERNIGHT_KITTY_GUEST_CNT AS OVERNIGHT_KITTY_GUEST_CNT,
  OVERNIGHT_DOG_GUEST_CNT AS OVERNIGHT_DOG_GUEST_CNT,
  OVERNIGHT_TOTAL_GUEST_CNT AS OVERNIGHT_TOTAL_GUEST_CNT,
  DAY_CAMP_PLAYROOM_CNT AS DAY_CAMP_PLAYROOM_CNT,
  DAY_CARE_CNT AS DAY_CARE_CNT,
  OVERNIGHT_WITH_DDC_CNT AS OVERNIGHT_WITH_DDC_CNT,
  TOTAL_DAYCAMP_CNT AS TOTAL_DAYCAMP_CNT,
  TOTAL_GUEST_CNT AS TOTAL_GUEST_CNT,
  NIGHT_PETCARE_SPECIALIST_HRS AS NIGHT_PETCARE_SPECIALIST_HRS,
  FRONT_DESK_HRS AS FRONT_DESK_HRS,
  BACK_OF_HOUSE_HRS AS BACK_OF_HOUSE_HRS,
  SUPERVISOR_HRS AS SUPERVISOR_HRS,
  PLAYROOM_HRS AS PLAYROOM_HRS,
  FISCAL_WK AS FISCAL_WK,
  FISCAL_MO AS FISCAL_MO,
  FISCAL_YR AS FISCAL_YR,
  STORE_NBR AS STORE_NBR,
  TOTAL_EARNED_HRS AS TOTAL_EARNED_HRS,
  EARNED_LOC_AMT AS EARNED_LOC_AMT,
  TOTAL_EARNED_AMT AS TOTAL_EARNED_AMT,
  LOAD_TSTMP AS LOAD_TSTMP,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_DerivedColumns_7
WHERE
  WEEK_DT < now()"""

df_8 = spark.sql(query_8)

df_8.createOrReplaceTempView("FIL_RemoveCurrentWeek_8")

# COMMAND ----------
# DBTITLE 1, PS2_HTL_EARNED


spark.sql("""INSERT INTO
  PS2_HTL_EARNED
SELECT
  EARN_DAY_DT AS EARN_DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  STORE_NBR AS STORE_NBR,
  WEEK_DT AS WEEK_DT,
  FISCAL_WK AS FISCAL_WK,
  FISCAL_MO AS FISCAL_MO,
  FISCAL_YR AS FISCAL_YR,
  OVERNIGHT_KITTY_GUEST_CNT AS OVERNIGHT_KITTY_GUEST_CNT,
  OVERNIGHT_DOG_GUEST_CNT AS OVERNIGHT_DOG_GUEST_CNT,
  OVERNIGHT_TOTAL_GUEST_CNT AS OVERNIGHT_TOTAL_GUEST_CNT,
  DAY_CAMP_PLAYROOM_CNT AS DAY_CAMP_PLAYROOM_CNT,
  DAY_CARE_CNT AS DAY_CARE_CNT,
  OVERNIGHT_WITH_DDC_CNT AS OVERNIGHT_WITH_DDC_CNT,
  TOTAL_DAYCAMP_CNT AS TOTAL_DAYCAMP_CNT,
  TOTAL_GUEST_CNT AS TOTAL_GUEST_CNT,
  NIGHT_PETCARE_SPECIALIST_HRS AS NIGHT_PETCARE_SPECIALIST_HRS,
  FRONT_DESK_HRS AS FRONT_DESK_HRS,
  BACK_OF_HOUSE_HRS AS BACK_OF_HOUSE_HRS,
  SUPERVISOR_HRS AS SUPERVISOR_HRS,
  PLAYROOM_HRS AS PLAYROOM_HRS,
  TOTAL_EARNED_HRS AS TOTAL_EARNED_HRS,
  EARNED_LOC_AMT AS AVG_WAGE_RATE,
  TOTAL_EARNED_AMT AS TOTAL_EARNED_AMT,
  LOAD_TSTMP AS UPDATE_TSTMP,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  FIL_RemoveCurrentWeek_8""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_ps2_htl_earned_INSERT")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_ps2_htl_earned_INSERT", mainWorkflowId, parentName)
