# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ./MappingUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_ps2_htl_earned_pre_UPDATE3")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_ps2_htl_earned_pre_UPDATE3", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PS2_HTL_PLAYROOM_CAPACITY_0


query_0 = f"""SELECT
  LOCATION_ID AS LOCATION_ID,
  DAY_OF_WEEK AS DAY_OF_WEEK,
  PLAYROOM_CAP_EFF_DT AS PLAYROOM_CAP_EFF_DT,
  PLAYROOM_CAP_END_DT AS PLAYROOM_CAP_END_DT,
  STORE_NBR AS STORE_NBR,
  PLAYROOM_01_CAPACITY AS PLAYROOM_01_CAPACITY,
  PLAYROOM_02_CAPACITY AS PLAYROOM_02_CAPACITY,
  PLAYROOM_03_CAPACITY AS PLAYROOM_03_CAPACITY,
  PLAYROOM_04_CAPACITY AS PLAYROOM_04_CAPACITY,
  PLAYROOM_05_CAPACITY AS PLAYROOM_05_CAPACITY,
  PLAYROOM_06_CAPACITY AS PLAYROOM_06_CAPACITY,
  PLAYROOM_07_CAPACITY AS PLAYROOM_07_CAPACITY,
  PLAYROOM_08_CAPACITY AS PLAYROOM_08_CAPACITY,
  PLAYROOM_09_CAPACITY AS PLAYROOM_09_CAPACITY,
  PLAYROOM_10_CAPACITY AS PLAYROOM_10_CAPACITY,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  PS2_HTL_PLAYROOM_CAPACITY"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_PS2_HTL_PLAYROOM_CAPACITY_0")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PS2_HTL_EARNED_PRE_1


query_1 = f"""SELECT
  EARN_DAY_DT AS EARN_DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  WEEK_DT AS WEEK_DT,
  OVERNIGHT_KITTY_GUEST_CNT AS OVERNIGHT_KITTY_GUEST_CNT,
  OVERNIGHT_DOG_GUEST_CNT AS OVERNIGHT_DOG_GUEST_CNT,
  OVERNIGHT_TOTAL_GUEST_CNT AS OVERNIGHT_TOTAL_GUEST_CNT,
  DAY_CAMP_PLAYROOM_CNT AS DAY_CAMP_PLAYROOM_CNT,
  DAY_CARE_CNT AS DAY_CARE_CNT,
  OVERNIGHT_WITH_DDC_CNT AS OVERNIGHT_WITH_DDC_CNT,
  TOTAL_DAYCAMP_CNT AS TOTAL_DAYCAMP_CNT,
  TOTAL_GUEST_CNT AS TOTAL_GUEST_CNT,
  NIGHT_PETCARE_SPECIALIST_HRS AS NIGHT_PETCARE_SPECIALIST_HRS,
  FRONT_DESK_HRS AS FRONT_DESK_HRS,
  BACK_OF_HOUSE_HRS AS BACK_OF_HOUSE_HRS,
  SUPERVISOR_HRS AS SUPERVISOR_HRS,
  PLAYROOM_HRS AS PLAYROOM_HRS
FROM
  PS2_HTL_EARNED_PRE"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("Shortcut_to_PS2_HTL_EARNED_PRE_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PS2_HTL_VARIABLES_2


query_2 = f"""SELECT
  STORE_NBR AS STORE_NBR,
  DEFAULT_STORE_FLAG AS DEFAULT_STORE_FLAG,
  PS2_HTL_VAR_REC_EFF_DT AS PS2_HTL_VAR_REC_EFF_DT,
  PS2_HTL_VAR_REC_END_DT AS PS2_HTL_VAR_REC_END_DT,
  TY_WEIGHT_PCNT AS TY_WEIGHT_PCNT,
  LY_WEIGHT_PCNT AS LY_WEIGHT_PCNT,
  FRONT_DESK_FIXED_HRS AS FRONT_DESK_FIXED_HRS,
  FRONT_DESK_VAR_HRS AS FRONT_DESK_VAR_HRS,
  PLAYROOM_VAR_HRS AS PLAYROOM_VAR_HRS,
  BACK_OF_HOUSE_FIXED_HRS AS BACK_OF_HOUSE_FIXED_HRS,
  BACK_OF_HOUSE_VAR_HRS AS BACK_OF_HOUSE_VAR_HRS,
  OVERNIGHT_TRESHHOLD AS OVERNIGHT_TRESHHOLD,
  OVERNIGHT_UPPER_VALUE AS OVERNIGHT_UPPER_VALUE,
  OVERNIGHT_LOWER_VALUE AS OVERNIGHT_LOWER_VALUE,
  SUPERVISOR_HRS AS SUPERVISOR_HRS,
  LOAD_TSTMP AS LOAD_TSTMP
FROM
  PS2_HTL_VARIABLES"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_PS2_HTL_VARIABLES_2")

# COMMAND ----------
# DBTITLE 1, Shortcut_To_DAYS_3


query_3 = f"""SELECT
  DAY_DT AS DAY_DT,
  BUSINESS_DAY_FLAG AS BUSINESS_DAY_FLAG,
  HOLIDAY_FLAG AS HOLIDAY_FLAG,
  DAY_OF_WK_NAME AS DAY_OF_WK_NAME,
  DAY_OF_WK_NAME_ABBR AS DAY_OF_WK_NAME_ABBR,
  DAY_OF_WK_NBR AS DAY_OF_WK_NBR,
  CAL_DAY_OF_MO_NBR AS CAL_DAY_OF_MO_NBR,
  CAL_DAY_OF_YR_NBR AS CAL_DAY_OF_YR_NBR,
  CAL_WK AS CAL_WK,
  CAL_WK_NBR AS CAL_WK_NBR,
  CAL_MO AS CAL_MO,
  CAL_MO_NBR AS CAL_MO_NBR,
  CAL_MO_NAME AS CAL_MO_NAME,
  CAL_MO_NAME_ABBR AS CAL_MO_NAME_ABBR,
  CAL_QTR AS CAL_QTR,
  CAL_QTR_NBR AS CAL_QTR_NBR,
  CAL_HALF AS CAL_HALF,
  CAL_YR AS CAL_YR,
  FISCAL_DAY_OF_MO_NBR AS FISCAL_DAY_OF_MO_NBR,
  FISCAL_DAY_OF_YR_NBR AS FISCAL_DAY_OF_YR_NBR,
  FISCAL_WK AS FISCAL_WK,
  FISCAL_WK_NBR AS FISCAL_WK_NBR,
  FISCAL_MO AS FISCAL_MO,
  FISCAL_MO_NBR AS FISCAL_MO_NBR,
  FISCAL_MO_NAME AS FISCAL_MO_NAME,
  FISCAL_MO_NAME_ABBR AS FISCAL_MO_NAME_ABBR,
  FISCAL_QTR AS FISCAL_QTR,
  FISCAL_QTR_NBR AS FISCAL_QTR_NBR,
  FISCAL_HALF AS FISCAL_HALF,
  FISCAL_YR AS FISCAL_YR,
  LYR_WEEK_DT AS LYR_WEEK_DT,
  LWK_WEEK_DT AS LWK_WEEK_DT,
  WEEK_DT AS WEEK_DT,
  EST_TIME_CONV_AMT AS EST_TIME_CONV_AMT,
  EST_TIME_CONV_HRS AS EST_TIME_CONV_HRS,
  ES0_TIME_CONV_AMT AS ES0_TIME_CONV_AMT,
  ES0_TIME_CONV_HRS AS ES0_TIME_CONV_HRS,
  CST_TIME_CONV_AMT AS CST_TIME_CONV_AMT,
  CST_TIME_CONV_HRS AS CST_TIME_CONV_HRS,
  CS0_TIME_CONV_AMT AS CS0_TIME_CONV_AMT,
  CS0_TIME_CONV_HRS AS CS0_TIME_CONV_HRS,
  MST_TIME_CONV_AMT AS MST_TIME_CONV_AMT,
  MST_TIME_CONV_HRS AS MST_TIME_CONV_HRS,
  MS0_TIME_CONV_AMT AS MS0_TIME_CONV_AMT,
  MS0_TIME_CONV_HRS AS MS0_TIME_CONV_HRS,
  PST_TIME_CONV_AMT AS PST_TIME_CONV_AMT,
  PST_TIME_CONV_HRS AS PST_TIME_CONV_HRS
FROM
  DAYS"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("Shortcut_To_DAYS_3")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_SITE_PROFILE_4


query_4 = f"""SELECT
  LOCATION_ID AS LOCATION_ID,
  LOCATION_TYPE_ID AS LOCATION_TYPE_ID,
  STORE_NBR AS STORE_NBR,
  STORE_NAME AS STORE_NAME,
  STORE_TYPE_ID AS STORE_TYPE_ID,
  STORE_OPEN_CLOSE_FLAG AS STORE_OPEN_CLOSE_FLAG,
  COMPANY_ID AS COMPANY_ID,
  REGION_ID AS REGION_ID,
  DISTRICT_ID AS DISTRICT_ID,
  PRICE_ZONE_ID AS PRICE_ZONE_ID,
  PRICE_AD_ZONE_ID AS PRICE_AD_ZONE_ID,
  REPL_DC_NBR AS REPL_DC_NBR,
  REPL_FISH_DC_NBR AS REPL_FISH_DC_NBR,
  REPL_FWD_DC_NBR AS REPL_FWD_DC_NBR,
  SQ_FEET_RETAIL AS SQ_FEET_RETAIL,
  SQ_FEET_TOTAL AS SQ_FEET_TOTAL,
  SITE_ADDRESS AS SITE_ADDRESS,
  SITE_CITY AS SITE_CITY,
  STATE_CD AS STATE_CD,
  COUNTRY_CD AS COUNTRY_CD,
  POSTAL_CD AS POSTAL_CD,
  SITE_MAIN_TELE_NO AS SITE_MAIN_TELE_NO,
  SITE_GROOM_TELE_NO AS SITE_GROOM_TELE_NO,
  SITE_EMAIL_ADDRESS AS SITE_EMAIL_ADDRESS,
  SITE_SALES_FLAG AS SITE_SALES_FLAG,
  EQUINE_MERCH_ID AS EQUINE_MERCH_ID,
  EQUINE_SITE_ID AS EQUINE_SITE_ID,
  EQUINE_SITE_OPEN_DT AS EQUINE_SITE_OPEN_DT,
  GEO_LATITUDE_NBR AS GEO_LATITUDE_NBR,
  GEO_LONGITUDE_NBR AS GEO_LONGITUDE_NBR,
  PETSMART_DMA_CD AS PETSMART_DMA_CD,
  LOYALTY_PGM_TYPE_ID AS LOYALTY_PGM_TYPE_ID,
  LOYALTY_PGM_STATUS_ID AS LOYALTY_PGM_STATUS_ID,
  LOYALTY_PGM_START_DT AS LOYALTY_PGM_START_DT,
  LOYALTY_PGM_CHANGE_DT AS LOYALTY_PGM_CHANGE_DT,
  BP_COMPANY_NBR AS BP_COMPANY_NBR,
  BP_GL_ACCT AS BP_GL_ACCT,
  TP_LOC_FLAG AS TP_LOC_FLAG,
  TP_ACTIVE_CNT AS TP_ACTIVE_CNT,
  PROMO_LABEL_CD AS PROMO_LABEL_CD,
  PARENT_LOCATION_ID AS PARENT_LOCATION_ID,
  LOCATION_NBR AS LOCATION_NBR,
  TIME_ZONE_ID AS TIME_ZONE_ID,
  DELV_SERVICE_CLASS_ID AS DELV_SERVICE_CLASS_ID,
  PICK_SERVICE_CLASS_ID AS PICK_SERVICE_CLASS_ID,
  SITE_LOGIN_ID AS SITE_LOGIN_ID,
  SITE_MANAGER_ID AS SITE_MANAGER_ID,
  SITE_OPEN_YRS_AMT AS SITE_OPEN_YRS_AMT,
  HOTEL_FLAG AS HOTEL_FLAG,
  DAYCAMP_FLAG AS DAYCAMP_FLAG,
  VET_FLAG AS VET_FLAG,
  DIST_MGR_NAME AS DIST_MGR_NAME,
  DIST_SVC_MGR_NAME AS DIST_SVC_MGR_NAME,
  REGION_VP_NAME AS REGION_VP_NAME,
  REGION_TRAINER_NAME AS REGION_TRAINER_NAME,
  ASSET_PROTECT_NAME AS ASSET_PROTECT_NAME,
  SITE_COUNTY AS SITE_COUNTY,
  SITE_FAX_NO AS SITE_FAX_NO,
  SFT_OPEN_DT AS SFT_OPEN_DT,
  DM_EMAIL_ADDRESS AS DM_EMAIL_ADDRESS,
  DSM_EMAIL_ADDRESS AS DSM_EMAIL_ADDRESS,
  RVP_EMAIL_ADDRESS AS RVP_EMAIL_ADDRESS,
  TRADE_AREA AS TRADE_AREA,
  FDLPS_NAME AS FDLPS_NAME,
  FDLPS_EMAIL AS FDLPS_EMAIL,
  OVERSITE_MGR_NAME AS OVERSITE_MGR_NAME,
  OVERSITE_MGR_EMAIL AS OVERSITE_MGR_EMAIL,
  SAFETY_DIRECTOR_NAME AS SAFETY_DIRECTOR_NAME,
  SAFETY_DIRECTOR_EMAIL AS SAFETY_DIRECTOR_EMAIL,
  RETAIL_MANAGER_SAFETY_NAME AS RETAIL_MANAGER_SAFETY_NAME,
  RETAIL_MANAGER_SAFETY_EMAIL AS RETAIL_MANAGER_SAFETY_EMAIL,
  AREA_DIRECTOR_NAME AS AREA_DIRECTOR_NAME,
  AREA_DIRECTOR_EMAIL AS AREA_DIRECTOR_EMAIL,
  DC_GENERAL_MANAGER_NAME AS DC_GENERAL_MANAGER_NAME,
  DC_GENERAL_MANAGER_EMAIL AS DC_GENERAL_MANAGER_EMAIL,
  ASST_DC_GENERAL_MANAGER_NAME1 AS ASST_DC_GENERAL_MANAGER_NAME1,
  ASST_DC_GENERAL_MANAGER_EMAIL1 AS ASST_DC_GENERAL_MANAGER_EMAIL1,
  ASST_DC_GENERAL_MANAGER_NAME2 AS ASST_DC_GENERAL_MANAGER_NAME2,
  ASST_DC_GENERAL_MANAGER_EMAIL2 AS ASST_DC_GENERAL_MANAGER_EMAIL2,
  REGIONAL_DC_SAFETY_MGR_NAME AS REGIONAL_DC_SAFETY_MGR_NAME,
  REGIONAL_DC_SAFETY_MGR_EMAIL AS REGIONAL_DC_SAFETY_MGR_EMAIL,
  DC_PEOPLE_SUPERVISOR_NAME AS DC_PEOPLE_SUPERVISOR_NAME,
  DC_PEOPLE_SUPERVISOR_EMAIL AS DC_PEOPLE_SUPERVISOR_EMAIL,
  PEOPLE_MANAGER_NAME AS PEOPLE_MANAGER_NAME,
  PEOPLE_MANAGER_EMAIL AS PEOPLE_MANAGER_EMAIL,
  ASSET_PROT_DIR_NAME AS ASSET_PROT_DIR_NAME,
  ASSET_PROT_DIR_EMAIL AS ASSET_PROT_DIR_EMAIL,
  SR_REG_ASSET_PROT_MGR_NAME AS SR_REG_ASSET_PROT_MGR_NAME,
  SR_REG_ASSET_PROT_MGR_EMAIL AS SR_REG_ASSET_PROT_MGR_EMAIL,
  REG_ASSET_PROT_MGR_NAME AS REG_ASSET_PROT_MGR_NAME,
  REG_ASSET_PROT_MGR_EMAIL AS REG_ASSET_PROT_MGR_EMAIL,
  ASSET_PROTECT_EMAIL AS ASSET_PROTECT_EMAIL,
  TP_START_DT AS TP_START_DT,
  OPEN_DT AS OPEN_DT,
  GR_OPEN_DT AS GR_OPEN_DT,
  CLOSE_DT AS CLOSE_DT,
  HOTEL_OPEN_DT AS HOTEL_OPEN_DT,
  ADD_DT AS ADD_DT,
  DELETE_DT AS DELETE_DT,
  UPDATE_DT AS UPDATE_DT,
  LOAD_DT AS LOAD_DT
FROM
  SITE_PROFILE"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("Shortcut_to_SITE_PROFILE_4")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_PS2_HTL_EARNED_PRE_5


query_5 = f"""SELECT
  DISTINCT Shortcut_To_DAYS_3.DAY_OF_WK_NBR AS DAY_OF_WK_NBR,
  Shortcut_to_PS2_HTL_EARNED_PRE_1.EARN_DAY_DT AS EARN_DAY_DT,
  Shortcut_to_PS2_HTL_EARNED_PRE_1.LOCATION_ID AS LOCATION_ID,
  Shortcut_to_PS2_HTL_EARNED_PRE_1.OVERNIGHT_KITTY_GUEST_CNT AS OVERNIGHT_KITTY_GUEST_CNT,
  Shortcut_to_PS2_HTL_EARNED_PRE_1.OVERNIGHT_DOG_GUEST_CNT AS OVERNIGHT_DOG_GUEST_CNT,
  Shortcut_to_PS2_HTL_EARNED_PRE_1.OVERNIGHT_TOTAL_GUEST_CNT AS OVERNIGHT_TOTAL_GUEST_CNT,
  Shortcut_to_PS2_HTL_EARNED_PRE_1.DAY_CAMP_PLAYROOM_CNT AS DAY_CAMP_PLAYROOM_CNT,
  Shortcut_to_PS2_HTL_EARNED_PRE_1.DAY_CARE_CNT AS DAY_CARE_CNT,
  Shortcut_to_PS2_HTL_EARNED_PRE_1.OVERNIGHT_WITH_DDC_CNT AS OVERNIGHT_WITH_DDC_CNT,
  Shortcut_to_SITE_PROFILE_4.LOCATION_ID AS LOCATION_ID1,
  Shortcut_to_SITE_PROFILE_4.STORE_NBR AS STORE_NBR,
  Shortcut_to_PS2_HTL_VARIABLES_2.DEFAULT_STORE_FLAG AS DEFAULT_STORE_FLAG,
  Shortcut_to_PS2_HTL_VARIABLES_2.PS2_HTL_VAR_REC_EFF_DT AS PS2_HTL_VAR_REC_EFF_DT,
  Shortcut_to_PS2_HTL_VARIABLES_2.PS2_HTL_VAR_REC_END_DT AS PS2_HTL_VAR_REC_END_DT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_PS2_HTL_EARNED_PRE_1,
  Shortcut_to_SITE_PROFILE_4,
  Shortcut_To_DAYS_3,
  Shortcut_to_PS2_HTL_VARIABLES_2
WHERE
  Shortcut_to_PS2_HTL_EARNED_PRE_1.EARN_DAY_DT >= Shortcut_to_PS2_HTL_VARIABLES_2.PS2_HTL_VAR_REC_EFF_DT
  AND Shortcut_to_PS2_HTL_EARNED_PRE_1.EARN_DAY_DT <= Shortcut_to_PS2_HTL_VARIABLES_2.PS2_HTL_VAR_REC_END_DT
  AND Shortcut_To_DAYS_3.DAY_DT = Shortcut_to_PS2_HTL_EARNED_PRE_1.EARN_DAY_DT
  AND Shortcut_to_SITE_PROFILE_4.LOCATION_ID = Shortcut_to_PS2_HTL_EARNED_PRE_1.LOCATION_ID"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("SQ_Shortcut_to_PS2_HTL_EARNED_PRE_5")

# COMMAND ----------
# DBTITLE 1, LKP_PS2_HTL_VARIABLES_FLAG_N_6


query_6 = f"""SELECT
  PHV.STORE_NBR AS STORE_NBR,
  PHV.DEFAULT_STORE_FLAG AS DEFAULT_STORE_FLAG,
  PHV.PS2_HTL_VAR_REC_EFF_DT AS PS2_HTL_VAR_REC_EFF_DT,
  PHV.PS2_HTL_VAR_REC_END_DT AS PS2_HTL_VAR_REC_END_DT,
  PHV.TY_WEIGHT_PCNT AS TY_WEIGHT_PCNT,
  PHV.LY_WEIGHT_PCNT AS LY_WEIGHT_PCNT,
  PHV.FRONT_DESK_FIXED_HRS AS FRONT_DESK_FIXED_HRS,
  PHV.FRONT_DESK_VAR_HRS AS FRONT_DESK_VAR_HRS,
  PHV.PLAYROOM_VAR_HRS AS PLAYROOM_VAR_HRS,
  PHV.BACK_OF_HOUSE_FIXED_HRS AS BACK_OF_HOUSE_FIXED_HRS,
  PHV.BACK_OF_HOUSE_VAR_HRS AS BACK_OF_HOUSE_VAR_HRS,
  PHV.OVERNIGHT_TRESHHOLD AS OVERNIGHT_TRESHHOLD,
  PHV.OVERNIGHT_UPPER_VALUE AS OVERNIGHT_UPPER_VALUE,
  PHV.OVERNIGHT_LOWER_VALUE AS OVERNIGHT_LOWER_VALUE,
  PHV.SUPERVISOR_HRS AS SUPERVISOR_HRS,
  PHV.LOAD_TSTMP AS LOAD_TSTMP,
  SStPHEP5.STORE_NBR AS STORE_NBR1,
  SStPHEP5.EARN_DAY_DT AS EARN_DAY_DT,
  SStPHEP5.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_PS2_HTL_EARNED_PRE_5 SStPHEP5
  LEFT JOIN PS2_HTL_VARIABLES PHV ON PHV.STORE_NBR = SStPHEP5.STORE_NBR
  AND PHV.PS2_HTL_VAR_REC_EFF_DT <= SStPHEP5.EARN_DAY_DT
  AND PHV.PS2_HTL_VAR_REC_END_DT >= SStPHEP5.EARN_DAY_DT"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("LKP_PS2_HTL_VARIABLES_FLAG_N_6")

# COMMAND ----------
# DBTITLE 1, LKP_PS2_HTL_VARIABLES_FLAG_Y_7


query_7 = f"""SELECT
  PHV.STORE_NBR AS STORE_NBR,
  PHV.DEFAULT_STORE_FLAG AS DEFAULT_STORE_FLAG,
  PHV.PS2_HTL_VAR_REC_EFF_DT AS PS2_HTL_VAR_REC_EFF_DT,
  PHV.PS2_HTL_VAR_REC_END_DT AS PS2_HTL_VAR_REC_END_DT,
  PHV.TY_WEIGHT_PCNT AS TY_WEIGHT_PCNT,
  PHV.LY_WEIGHT_PCNT AS LY_WEIGHT_PCNT,
  PHV.FRONT_DESK_FIXED_HRS AS FRONT_DESK_FIXED_HRS,
  PHV.FRONT_DESK_VAR_HRS AS FRONT_DESK_VAR_HRS,
  PHV.PLAYROOM_VAR_HRS AS PLAYROOM_VAR_HRS,
  PHV.BACK_OF_HOUSE_FIXED_HRS AS BACK_OF_HOUSE_FIXED_HRS,
  PHV.BACK_OF_HOUSE_VAR_HRS AS BACK_OF_HOUSE_VAR_HRS,
  PHV.OVERNIGHT_TRESHHOLD AS OVERNIGHT_TRESHHOLD,
  PHV.OVERNIGHT_UPPER_VALUE AS OVERNIGHT_UPPER_VALUE,
  PHV.OVERNIGHT_LOWER_VALUE AS OVERNIGHT_LOWER_VALUE,
  PHV.SUPERVISOR_HRS AS SUPERVISOR_HRS,
  PHV.LOAD_TSTMP AS LOAD_TSTMP,
  SStPHEP5.EARN_DAY_DT AS EARN_DAY_DT,
  SStPHEP5.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_PS2_HTL_EARNED_PRE_5 SStPHEP5
  LEFT JOIN PS2_HTL_VARIABLES PHV ON PHV.PS2_HTL_VAR_REC_EFF_DT <= SStPHEP5.EARN_DAY_DT
  AND PHV.PS2_HTL_VAR_REC_END_DT >= SStPHEP5.EARN_DAY_DT"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("LKP_PS2_HTL_VARIABLES_FLAG_Y_7")

# COMMAND ----------
# DBTITLE 1, EXP_CalculateTotals_8


query_8 = f"""SELECT
  IFF(
    SStPHEP5.DAY_OF_WK_NBR = 6
    OR SStPHEP5.DAY_OF_WK_NBR = 7,
    'Weekend',
    'Weekday'
  ) AS DAY_OF_WEEK,
  SStPHEP5.EARN_DAY_DT AS EARN_DAY_DT,
  SStPHEP5.LOCATION_ID AS LOCATION_ID,
  SStPHEP5.OVERNIGHT_KITTY_GUEST_CNT AS OVERNIGHT_KITTY_GUEST_CNT,
  SStPHEP5.OVERNIGHT_DOG_GUEST_CNT AS OVERNIGHT_DOG_GUEST_CNT,
  SStPHEP5.OVERNIGHT_TOTAL_GUEST_CNT AS OVERNIGHT_TOTAL_GUEST_CNT,
  SStPHEP5.DAY_CAMP_PLAYROOM_CNT AS DAY_CAMP_PLAYROOM_CNT,
  SStPHEP5.DAY_CARE_CNT AS DAY_CARE_CNT,
  SStPHEP5.OVERNIGHT_WITH_DDC_CNT AS OVERNIGHT_WITH_DDC_CNT,
  LPHVFN6.PLAYROOM_VAR_HRS AS PLAYROOM_VAR_HRS,
  LPHVFN6.SUPERVISOR_HRS AS SUPERVISOR_HRS,
  SStPHEP5.DAY_CAMP_PLAYROOM_CNT + SStPHEP5.OVERNIGHT_WITH_DDC_CNT AS TOTAL_DAYCAMP_CNT,
  SStPHEP5.OVERNIGHT_KITTY_GUEST_CNT + SStPHEP5.OVERNIGHT_DOG_GUEST_CNT + SStPHEP5.DAY_CAMP_PLAYROOM_CNT + SStPHEP5.DAY_CARE_CNT AS TOTAL_GUEST_CNT,
  ROUND(
    IFF(
      SStPHEP5.OVERNIGHT_TOTAL_GUEST_CNT > IFF(
        ISNULL(LPHVFN6.STORE_NBR),
        LPHVFY7.LPHVFN6.OVERNIGHT_TRESHHOLD,
        LPHVFN6.OVERNIGHT_TRESHHOLD
      ),
      IFF(
        ISNULL(LPHVFN6.STORE_NBR),
        LPHVFY7.LPHVFN6.OVERNIGHT_UPPER_VALUE,
        LPHVFN6.OVERNIGHT_UPPER_VALUE
      ),
      IFF(
        ISNULL(LPHVFN6.STORE_NBR),
        LPHVFY7.LPHVFN6.OVERNIGHT_LOWER_VALUE,
        LPHVFN6.OVERNIGHT_LOWER_VALUE
      )
    ),
    2
  ) AS NIGHT_PETCARE_SPECIALIST_HRS,
  ROUND(
    IFF(
      ISNULL(LPHVFN6.STORE_NBR),
      LPHVFY7.LPHVFN6.FRONT_DESK_FIXED_HRS,
      LPHVFN6.FRONT_DESK_FIXED_HRS
    ) + (
      IFF(
        ISNULL(LPHVFN6.STORE_NBR),
        LPHVFY7.LPHVFN6.FRONT_DESK_VAR_HRS,
        LPHVFN6.FRONT_DESK_VAR_HRS
      ) * (
        SStPHEP5.OVERNIGHT_KITTY_GUEST_CNT + SStPHEP5.OVERNIGHT_DOG_GUEST_CNT + SStPHEP5.DAY_CAMP_PLAYROOM_CNT + SStPHEP5.DAY_CARE_CNT
      )
    ),
    2
  ) AS FRONT_DESK_HRS,
  ROUND(
    IFF(
      ISNULL(LPHVFN6.STORE_NBR),
      LPHVFY7.LPHVFN6.BACK_OF_HOUSE_FIXED_HRS,
      LPHVFN6.BACK_OF_HOUSE_FIXED_HRS
    ) + (
      IFF(
        ISNULL(LPHVFN6.STORE_NBR),
        LPHVFY7.LPHVFN6.BACK_OF_HOUSE_VAR_HRS,
        LPHVFN6.BACK_OF_HOUSE_VAR_HRS
      ) * SStPHEP5.OVERNIGHT_TOTAL_GUEST_CNT
    ),
    2
  ) AS BACK_OF_HOUSE_HRS,
  LPHVFY7.FRONT_DESK_FIXED_HRS AS FRONT_DESK_FIXED_HRS1,
  LPHVFY7.FRONT_DESK_VAR_HRS AS FRONT_DESK_VAR_HRS1,
  LPHVFY7.PLAYROOM_VAR_HRS AS PLAYROOM_VAR_HRS1,
  LPHVFY7.BACK_OF_HOUSE_FIXED_HRS AS BACK_OF_HOUSE_FIXED_HRS1,
  LPHVFY7.BACK_OF_HOUSE_VAR_HRS AS BACK_OF_HOUSE_VAR_HRS1,
  LPHVFY7.OVERNIGHT_TRESHHOLD AS OVERNIGHT_TRESHHOLD1,
  LPHVFY7.OVERNIGHT_UPPER_VALUE AS OVERNIGHT_UPPER_VALUE1,
  LPHVFY7.OVERNIGHT_LOWER_VALUE AS OVERNIGHT_LOWER_VALUE1,
  LPHVFY7.SUPERVISOR_HRS AS SUPERVISOR_HRS1,
  IFF(
    ISNULL(STORE_NBR),
    FRONT_DESK_FIXED_HRS1,
    FRONT_DESK_FIXED_HRS
  ) AS v_FRONT_DESK_FIXED_HRS,
  IFF(
    ISNULL(STORE_NBR),
    FRONT_DESK_VAR_HRS1,
    FRONT_DESK_VAR_HRS
  ) AS v_FRONT_DESK_VAR_HRS,
  IFF(
    ISNULL(STORE_NBR),
    PLAYROOM_VAR_HRS1,
    PLAYROOM_VAR_HRS
  ) AS v_PLAYROOM_VAR_HRS,
  IFF(
    ISNULL(STORE_NBR),
    BACK_OF_HOUSE_FIXED_HRS1,
    BACK_OF_HOUSE_FIXED_HRS
  ) AS v_BACK_OF_HOUSE_FIXED_HRS,
  IFF(
    ISNULL(STORE_NBR),
    BACK_OF_HOUSE_VAR_HRS1,
    BACK_OF_HOUSE_VAR_HRS
  ) AS v_BACK_OF_HOUSE_VAR_HRS,
  IFF(
    ISNULL(STORE_NBR),
    OVERNIGHT_TRESHHOLD1,
    OVERNIGHT_TRESHHOLD
  ) AS v_OVERNIGHT_TRESHHOLD,
  IFF(
    ISNULL(STORE_NBR),
    OVERNIGHT_UPPER_VALUE1,
    OVERNIGHT_UPPER_VALUE
  ) AS v_OVERNIGHT_UPPER_VALUE,
  IFF(
    ISNULL(STORE_NBR),
    OVERNIGHT_LOWER_VALUE1,
    OVERNIGHT_LOWER_VALUE
  ) AS v_OVERNIGHT_LOWER_VALUE,
  IFF(ISNULL(STORE_NBR), SUPERVISOR_HRS1, SUPERVISOR_HRS) AS v_SUPERVISOR_HRS,
  IFF(
    ISNULL(LPHVFN6.STORE_NBR),
    LPHVFY7.LPHVFN6.SUPERVISOR_HRS,
    LPHVFN6.SUPERVISOR_HRS
  ) AS o_SUPERVISOR_HRS,
  IFF(
    ISNULL(LPHVFN6.STORE_NBR),
    LPHVFY7.LPHVFN6.PLAYROOM_VAR_HRS,
    LPHVFN6.PLAYROOM_VAR_HRS
  ) AS o_PLAYROOM_VAR_HRS,
  LPHVFN6.STORE_NBR AS STORE_NBR,
  LPHVFY7.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  LKP_PS2_HTL_VARIABLES_FLAG_Y_7 LPHVFY7
  INNER JOIN SQ_Shortcut_to_PS2_HTL_EARNED_PRE_5 SStPHEP5 ON LPHVFY7.Monotonically_Increasing_Id = SStPHEP5.Monotonically_Increasing_Id
  INNER JOIN LKP_PS2_HTL_VARIABLES_FLAG_N_6 LPHVFN6 ON SStPHEP5.Monotonically_Increasing_Id = LPHVFN6.Monotonically_Increasing_Id"""

df_8 = spark.sql(query_8)

df_8.createOrReplaceTempView("EXP_CalculateTotals_8")

# COMMAND ----------
# DBTITLE 1, LKP_PS2_HTL_PLAYROOM_CAPACITY_9


query_9 = f"""SELECT
  EC8.EARN_DAY_DT AS IN_EARN_DAY_DT,
  EC8.LOCATION_ID AS IN_LOCATION_ID,
  PHPC.PLAYROOM_01_CAPACITY AS PLAYROOM_01_CAPACITY,
  PHPC.PLAYROOM_02_CAPACITY AS PLAYROOM_02_CAPACITY,
  PHPC.PLAYROOM_03_CAPACITY AS PLAYROOM_03_CAPACITY,
  PHPC.PLAYROOM_04_CAPACITY AS PLAYROOM_04_CAPACITY,
  PHPC.PLAYROOM_05_CAPACITY AS PLAYROOM_05_CAPACITY,
  PHPC.PLAYROOM_06_CAPACITY AS PLAYROOM_06_CAPACITY,
  PHPC.PLAYROOM_07_CAPACITY AS PLAYROOM_07_CAPACITY,
  PHPC.PLAYROOM_08_CAPACITY AS PLAYROOM_08_CAPACITY,
  PHPC.PLAYROOM_09_CAPACITY AS PLAYROOM_09_CAPACITY,
  PHPC.PLAYROOM_10_CAPACITY AS PLAYROOM_10_CAPACITY,
  EC8.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_CalculateTotals_8 EC8
  LEFT JOIN PS2_HTL_PLAYROOM_CAPACITY PHPC ON PHPC.LOCATION_ID = EC8.PHPC.LOCATION_ID
  AND PHPC.DAY_OF_WEEK = EC8.PHPC.DAY_OF_WEEK
  AND PHPC.PLAYROOM_CAP_EFF_DT <= EC8.EARN_DAY_DT
  AND PHPC.PLAYROOM_CAP_END_DT >= EC8.EARN_DAY_DT"""

df_9 = spark.sql(query_9)

df_9.createOrReplaceTempView("LKP_PS2_HTL_PLAYROOM_CAPACITY_9")

# COMMAND ----------
# DBTITLE 1, EXP_CalculatePlayroomCapacity_10


query_10 = f"""SELECT
  LPHPC9.IN_EARN_DAY_DT AS EARN_DAY_DT,
  LPHPC9.IN_LOCATION_ID AS LOCATION_ID,
  IFF(
    ISNULL(PLAYROOM_01_CAPACITY),
    0,
    PLAYROOM_01_CAPACITY
  ) + IFF(
    ISNULL(PLAYROOM_02_CAPACITY),
    0,
    PLAYROOM_02_CAPACITY
  ) AS PLAYROOM_02_CAPACITY_AGG,
  PLAYROOM_02_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_03_CAPACITY),
    0,
    PLAYROOM_03_CAPACITY
  ) AS PLAYROOM_03_CAPACITY_AGG,
  PLAYROOM_03_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_04_CAPACITY),
    0,
    PLAYROOM_04_CAPACITY
  ) AS PLAYROOM_04_CAPACITY_AGG,
  PLAYROOM_04_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_05_CAPACITY),
    0,
    PLAYROOM_05_CAPACITY
  ) AS PLAYROOM_05_CAPACITY_AGG,
  PLAYROOM_05_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_06_CAPACITY),
    0,
    PLAYROOM_06_CAPACITY
  ) AS PLAYROOM_06_CAPACITY_AGG,
  PLAYROOM_06_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_07_CAPACITY),
    0,
    PLAYROOM_07_CAPACITY
  ) AS PLAYROOM_07_CAPACITY_AGG,
  PLAYROOM_07_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_08_CAPACITY),
    0,
    PLAYROOM_08_CAPACITY
  ) AS PLAYROOM_08_CAPACITY_AGG,
  PLAYROOM_08_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_09_CAPACITY),
    0,
    PLAYROOM_09_CAPACITY
  ) AS PLAYROOM_09_CAPACITY_AGG,
  PLAYROOM_09_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_10_CAPACITY),
    0,
    PLAYROOM_10_CAPACITY
  ) AS PLAYROOM_10_CAPACITY_AGG,
  EC8.OVERNIGHT_KITTY_GUEST_CNT AS OVERNIGHT_KITTY_GUEST_CNT,
  EC8.OVERNIGHT_DOG_GUEST_CNT AS OVERNIGHT_DOG_GUEST_CNT,
  EC8.OVERNIGHT_TOTAL_GUEST_CNT AS OVERNIGHT_TOTAL_GUEST_CNT,
  EC8.DAY_CAMP_PLAYROOM_CNT AS DAY_CAMP_PLAYROOM_CNT,
  EC8.DAY_CARE_CNT AS DAY_CARE_CNT,
  EC8.OVERNIGHT_WITH_DDC_CNT AS OVERNIGHT_WITH_DDC_CNT,
  EC8.o_SUPERVISOR_HRS AS SUPERVISOR_HRS,
  EC8.TOTAL_DAYCAMP_CNT AS TOTAL_DAYCAMP_CNT,
  EC8.TOTAL_GUEST_CNT AS TOTAL_GUEST_CNT,
  EC8.NIGHT_PETCARE_SPECIALIST_HRS AS NIGHT_PETCARE_SPECIALIST_HRS,
  EC8.FRONT_DESK_HRS AS FRONT_DESK_HRS,
  EC8.BACK_OF_HOUSE_HRS AS BACK_OF_HOUSE_HRS,
  IFF(
    TOTAL_DAYCAMP_CNT > PLAYROOM_10_CAPACITY_AGG,
    PLAYROOM_10_CAPACITY_AGG,
    TOTAL_DAYCAMP_CNT
  ) AS v_TOTAL_DAYCAMP_CNT,
  DECODE(
    TRUE,
    (
      IFF(
        EC8.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        EC8.TOTAL_DAYCAMP_CNT
      ) <= LPHPC9.PLAYROOM_01_CAPACITY
    )
    OR IFF(
      ISNULL(LPHPC9.PLAYROOM_01_CAPACITY),
      0,
      LPHPC9.PLAYROOM_01_CAPACITY
    ) + IFF(
      ISNULL(LPHPC9.PLAYROOM_02_CAPACITY),
      0,
      LPHPC9.PLAYROOM_02_CAPACITY
    ) = 0,
    1,
    (
      IFF(
        EC8.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        EC8.TOTAL_DAYCAMP_CNT
      ) <= IFF(
        ISNULL(LPHPC9.PLAYROOM_01_CAPACITY),
        0,
        LPHPC9.PLAYROOM_01_CAPACITY
      ) + IFF(
        ISNULL(LPHPC9.PLAYROOM_02_CAPACITY),
        0,
        LPHPC9.PLAYROOM_02_CAPACITY
      )
    )
    OR IFF(
      ISNULL(LPHPC9.PLAYROOM_01_CAPACITY),
      0,
      LPHPC9.PLAYROOM_01_CAPACITY
    ) + IFF(
      ISNULL(LPHPC9.PLAYROOM_02_CAPACITY),
      0,
      LPHPC9.PLAYROOM_02_CAPACITY
    ) + IFF(
      ISNULL(LPHPC9.PLAYROOM_03_CAPACITY),
      0,
      LPHPC9.PLAYROOM_03_CAPACITY
    ) = 0,
    2,
    (
      IFF(
        EC8.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        EC8.TOTAL_DAYCAMP_CNT
      ) <= IFF(
        ISNULL(LPHPC9.PLAYROOM_01_CAPACITY),
        0,
        LPHPC9.PLAYROOM_01_CAPACITY
      ) + IFF(
        ISNULL(LPHPC9.PLAYROOM_02_CAPACITY),
        0,
        LPHPC9.PLAYROOM_02_CAPACITY
      ) + IFF(
        ISNULL(LPHPC9.PLAYROOM_03_CAPACITY),
        0,
        LPHPC9.PLAYROOM_03_CAPACITY
      )
    )
    OR IFF(
      ISNULL(LPHPC9.PLAYROOM_01_CAPACITY),
      0,
      LPHPC9.PLAYROOM_01_CAPACITY
    ) + IFF(
      ISNULL(LPHPC9.PLAYROOM_02_CAPACITY),
      0,
      LPHPC9.PLAYROOM_02_CAPACITY
    ) + IFF(
      ISNULL(LPHPC9.PLAYROOM_03_CAPACITY),
      0,
      LPHPC9.PLAYROOM_03_CAPACITY
    ) + IFF(
      ISNULL(LPHPC9.PLAYROOM_04_CAPACITY),
      0,
      LPHPC9.PLAYROOM_04_CAPACITY
    ) = 0,
    3,
    (
      IFF(
        EC8.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        EC8.TOTAL_DAYCAMP_CNT
      ) <= IFF(
        ISNULL(LPHPC9.PLAYROOM_01_CAPACITY),
        0,
        LPHPC9.PLAYROOM_01_CAPACITY
      ) + IFF(
        ISNULL(LPHPC9.PLAYROOM_02_CAPACITY),
        0,
        LPHPC9.PLAYROOM_02_CAPACITY
      ) + IFF(
        ISNULL(LPHPC9.PLAYROOM_03_CAPACITY),
        0,
        LPHPC9.PLAYROOM_03_CAPACITY
      ) + IFF(
        ISNULL(LPHPC9.PLAYROOM_04_CAPACITY),
        0,
        LPHPC9.PLAYROOM_04_CAPACITY
      )
    )
    OR PLAYROOM_04_CAPACITY_AGG + IFF(
      ISNULL(LPHPC9.PLAYROOM_05_CAPACITY),
      0,
      LPHPC9.PLAYROOM_05_CAPACITY
    ) = 0,
    4,
    (
      IFF(
        EC8.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        EC8.TOTAL_DAYCAMP_CNT
      ) <= PLAYROOM_04_CAPACITY_AGG + IFF(
        ISNULL(LPHPC9.PLAYROOM_05_CAPACITY),
        0,
        LPHPC9.PLAYROOM_05_CAPACITY
      )
    )
    OR PLAYROOM_05_CAPACITY_AGG + IFF(
      ISNULL(LPHPC9.PLAYROOM_06_CAPACITY),
      0,
      LPHPC9.PLAYROOM_06_CAPACITY
    ) = 0,
    5,
    (
      IFF(
        EC8.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        EC8.TOTAL_DAYCAMP_CNT
      ) <= PLAYROOM_05_CAPACITY_AGG + IFF(
        ISNULL(LPHPC9.PLAYROOM_06_CAPACITY),
        0,
        LPHPC9.PLAYROOM_06_CAPACITY
      )
    )
    OR PLAYROOM_05_CAPACITY_AGG + IFF(
      ISNULL(LPHPC9.PLAYROOM_06_CAPACITY),
      0,
      LPHPC9.PLAYROOM_06_CAPACITY
    ) + IFF(
      ISNULL(LPHPC9.PLAYROOM_07_CAPACITY),
      0,
      LPHPC9.PLAYROOM_07_CAPACITY
    ) = 0,
    6,
    (
      IFF(
        EC8.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        EC8.TOTAL_DAYCAMP_CNT
      ) <= PLAYROOM_05_CAPACITY_AGG + IFF(
        ISNULL(LPHPC9.PLAYROOM_06_CAPACITY),
        0,
        LPHPC9.PLAYROOM_06_CAPACITY
      ) + IFF(
        ISNULL(LPHPC9.PLAYROOM_07_CAPACITY),
        0,
        LPHPC9.PLAYROOM_07_CAPACITY
      )
    )
    OR PLAYROOM_07_CAPACITY_AGG + IFF(
      ISNULL(LPHPC9.PLAYROOM_08_CAPACITY),
      0,
      LPHPC9.PLAYROOM_08_CAPACITY
    ) = 0,
    7,
    (
      IFF(
        EC8.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        EC8.TOTAL_DAYCAMP_CNT
      ) <= PLAYROOM_07_CAPACITY_AGG + IFF(
        ISNULL(LPHPC9.PLAYROOM_08_CAPACITY),
        0,
        LPHPC9.PLAYROOM_08_CAPACITY
      )
    )
    OR PLAYROOM_08_CAPACITY_AGG + IFF(
      ISNULL(LPHPC9.PLAYROOM_09_CAPACITY),
      0,
      LPHPC9.PLAYROOM_09_CAPACITY
    ) = 0,
    8,
    (
      IFF(
        EC8.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        EC8.TOTAL_DAYCAMP_CNT
      ) <= PLAYROOM_08_CAPACITY_AGG + IFF(
        ISNULL(LPHPC9.PLAYROOM_09_CAPACITY),
        0,
        LPHPC9.PLAYROOM_09_CAPACITY
      )
    )
    OR PLAYROOM_09_CAPACITY_AGG + IFF(
      ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
      0,
      LPHPC9.PLAYROOM_10_CAPACITY
    ) = 0,
    9,
    (
      IFF(
        EC8.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        PLAYROOM_09_CAPACITY_AGG + IFF(
          ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
          0,
          LPHPC9.PLAYROOM_10_CAPACITY
        ),
        EC8.TOTAL_DAYCAMP_CNT
      ) <= PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC9.PLAYROOM_10_CAPACITY),
        0,
        LPHPC9.PLAYROOM_10_CAPACITY
      )
    ),
    10,
    0
  ) * EC8.o_PLAYROOM_VAR_HRS AS PLAYROOM_HRS,
  LPHPC9.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  LKP_PS2_HTL_PLAYROOM_CAPACITY_9 LPHPC9
  INNER JOIN EXP_CalculateTotals_8 EC8 ON LPHPC9.Monotonically_Increasing_Id = EC8.Monotonically_Increasing_Id"""

df_10 = spark.sql(query_10)

df_10.createOrReplaceTempView("EXP_CalculatePlayroomCapacity_10")

# COMMAND ----------
# DBTITLE 1, UPD_OnlyUpdate_11


query_11 = f"""SELECT
  EARN_DAY_DT AS EARN_DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  OVERNIGHT_KITTY_GUEST_CNT AS OVERNIGHT_KITTY_GUEST_CNT,
  OVERNIGHT_DOG_GUEST_CNT AS OVERNIGHT_DOG_GUEST_CNT,
  OVERNIGHT_TOTAL_GUEST_CNT AS OVERNIGHT_TOTAL_GUEST_CNT,
  DAY_CAMP_PLAYROOM_CNT AS DAY_CAMP_PLAYROOM_CNT,
  DAY_CARE_CNT AS DAY_CARE_CNT,
  OVERNIGHT_WITH_DDC_CNT AS OVERNIGHT_WITH_DDC_CNT,
  SUPERVISOR_HRS AS SUPERVISOR_HRS,
  TOTAL_DAYCAMP_CNT AS TOTAL_DAYCAMP_CNT,
  TOTAL_GUEST_CNT AS TOTAL_GUEST_CNT,
  NIGHT_PETCARE_SPECIALIST_HRS AS NIGHT_PETCARE_SPECIALIST_HRS,
  FRONT_DESK_HRS AS FRONT_DESK_HRS,
  BACK_OF_HOUSE_HRS AS BACK_OF_HOUSE_HRS,
  PLAYROOM_HRS AS PLAYROOM_HRS,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_CalculatePlayroomCapacity_10"""

df_11 = spark.sql(query_11)

df_11.createOrReplaceTempView("UPD_OnlyUpdate_11")

# COMMAND ----------
# DBTITLE 1, PS2_HTL_EARNED_PRE


spark.sql("""MERGE INTO PS2_HTL_EARNED_PRE AS TARGET
USING
  UPD_OnlyUpdate_11 AS SOURCE ON TARGET.LOCATION_ID = SOURCE.LOCATION_ID
  AND TARGET.EARN_DAY_DT = SOURCE.EARN_DAY_DT
  WHEN MATCHED THEN
UPDATE
SET
  TARGET.EARN_DAY_DT = SOURCE.EARN_DAY_DT,
  TARGET.LOCATION_ID = SOURCE.LOCATION_ID,
  TARGET.OVERNIGHT_KITTY_GUEST_CNT = SOURCE.OVERNIGHT_KITTY_GUEST_CNT,
  TARGET.OVERNIGHT_DOG_GUEST_CNT = SOURCE.OVERNIGHT_DOG_GUEST_CNT,
  TARGET.OVERNIGHT_TOTAL_GUEST_CNT = SOURCE.OVERNIGHT_TOTAL_GUEST_CNT,
  TARGET.DAY_CAMP_PLAYROOM_CNT = SOURCE.DAY_CAMP_PLAYROOM_CNT,
  TARGET.DAY_CARE_CNT = SOURCE.DAY_CARE_CNT,
  TARGET.OVERNIGHT_WITH_DDC_CNT = SOURCE.OVERNIGHT_WITH_DDC_CNT,
  TARGET.TOTAL_DAYCAMP_CNT = SOURCE.TOTAL_DAYCAMP_CNT,
  TARGET.TOTAL_GUEST_CNT = SOURCE.TOTAL_GUEST_CNT,
  TARGET.NIGHT_PETCARE_SPECIALIST_HRS = SOURCE.NIGHT_PETCARE_SPECIALIST_HRS,
  TARGET.FRONT_DESK_HRS = SOURCE.FRONT_DESK_HRS,
  TARGET.BACK_OF_HOUSE_HRS = SOURCE.BACK_OF_HOUSE_HRS,
  TARGET.SUPERVISOR_HRS = SOURCE.SUPERVISOR_HRS,
  TARGET.PLAYROOM_HRS = SOURCE.PLAYROOM_HRS""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_ps2_htl_earned_pre_UPDATE3")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_ps2_htl_earned_pre_UPDATE3", mainWorkflowId, parentName)
