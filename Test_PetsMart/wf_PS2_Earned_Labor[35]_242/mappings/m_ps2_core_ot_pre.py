# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ./MappingUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_ps2_core_ot_pre")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_ps2_core_ot_pre", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PS2_BLUE_LAW_STORE_LKUP_0


query_0 = f"""SELECT
  LOCATION_ID AS LOCATION_ID,
  EFF_DT AS EFF_DT,
  END_DT AS END_DT,
  STORE_NBR AS STORE_NBR
FROM
  PS2_BLUE_LAW_STORE_LKUP"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_PS2_BLUE_LAW_STORE_LKUP_0")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PS2_EARNED_HRS1_1


query_1 = f"""SELECT
  DAY_DT AS DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  WFA_BUSN_AREA_ID AS WFA_BUSN_AREA_ID,
  WFA_DEPT_ID AS WFA_DEPT_ID,
  WFA_TASK_ID AS WFA_TASK_ID,
  STORE_NBR AS STORE_NBR,
  WFA_BUSN_AREA_DESC AS WFA_BUSN_AREA_DESC,
  WFA_DEPT_DESC AS WFA_DEPT_DESC,
  WFA_TASK_DESC AS WFA_TASK_DESC,
  EARNED_HRS AS EARNED_HRS,
  UPDATE_DT AS UPDATE_DT,
  LOAD_DT AS LOAD_DT
FROM
  PS2_EARNED_HRS"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("Shortcut_to_PS2_EARNED_HRS1_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PS2_EARNED_HRS_2


query_2 = f"""SELECT
  DAY_DT AS DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  WFA_BUSN_AREA_ID AS WFA_BUSN_AREA_ID,
  WFA_DEPT_ID AS WFA_DEPT_ID,
  WFA_TASK_ID AS WFA_TASK_ID,
  STORE_NBR AS STORE_NBR,
  WFA_BUSN_AREA_DESC AS WFA_BUSN_AREA_DESC,
  WFA_DEPT_DESC AS WFA_DEPT_DESC,
  WFA_TASK_DESC AS WFA_TASK_DESC,
  EARNED_HRS AS EARNED_HRS,
  UPDATE_DT AS UPDATE_DT,
  LOAD_DT AS LOAD_DT
FROM
  PS2_EARNED_HRS"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_PS2_EARNED_HRS_2")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PS2_EARNED_HRS2_3


query_3 = f"""SELECT
  DAY_DT AS DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  WFA_BUSN_AREA_ID AS WFA_BUSN_AREA_ID,
  WFA_DEPT_ID AS WFA_DEPT_ID,
  WFA_TASK_ID AS WFA_TASK_ID,
  STORE_NBR AS STORE_NBR,
  WFA_BUSN_AREA_DESC AS WFA_BUSN_AREA_DESC,
  WFA_DEPT_DESC AS WFA_DEPT_DESC,
  WFA_TASK_DESC AS WFA_TASK_DESC,
  EARNED_HRS AS EARNED_HRS,
  UPDATE_DT AS UPDATE_DT,
  LOAD_DT AS LOAD_DT
FROM
  PS2_EARNED_HRS"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("Shortcut_to_PS2_EARNED_HRS2_3")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PS2_CORE_HOLIDAY_LKUP_4


query_4 = f"""SELECT
  DAY_DT AS DAY_DT,
  DEFAULT_STORE_FLAG AS DEFAULT_STORE_FLAG,
  LOCATION_ID AS LOCATION_ID,
  OT_TYPE AS OT_TYPE,
  COUNTRY_CD AS COUNTRY_CD,
  STORE_NBR AS STORE_NBR
FROM
  PS2_CORE_HOLIDAY_LKUP"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("Shortcut_to_PS2_CORE_HOLIDAY_LKUP_4")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PS2_CORE_HOLIDAY_LKUP1_5


query_5 = f"""SELECT
  DAY_DT AS DAY_DT,
  DEFAULT_STORE_FLAG AS DEFAULT_STORE_FLAG,
  LOCATION_ID AS LOCATION_ID,
  OT_TYPE AS OT_TYPE,
  COUNTRY_CD AS COUNTRY_CD,
  STORE_NBR AS STORE_NBR
FROM
  PS2_CORE_HOLIDAY_LKUP"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("Shortcut_to_PS2_CORE_HOLIDAY_LKUP1_5")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_DAYS_6


query_6 = f"""SELECT
  DAY_DT AS DAY_DT,
  BUSINESS_DAY_FLAG AS BUSINESS_DAY_FLAG,
  HOLIDAY_FLAG AS HOLIDAY_FLAG,
  DAY_OF_WK_NAME AS DAY_OF_WK_NAME,
  DAY_OF_WK_NAME_ABBR AS DAY_OF_WK_NAME_ABBR,
  DAY_OF_WK_NBR AS DAY_OF_WK_NBR,
  CAL_DAY_OF_MO_NBR AS CAL_DAY_OF_MO_NBR,
  CAL_DAY_OF_YR_NBR AS CAL_DAY_OF_YR_NBR,
  CAL_WK AS CAL_WK,
  CAL_WK_NBR AS CAL_WK_NBR,
  CAL_MO AS CAL_MO,
  CAL_MO_NBR AS CAL_MO_NBR,
  CAL_MO_NAME AS CAL_MO_NAME,
  CAL_MO_NAME_ABBR AS CAL_MO_NAME_ABBR,
  CAL_QTR AS CAL_QTR,
  CAL_QTR_NBR AS CAL_QTR_NBR,
  CAL_HALF AS CAL_HALF,
  CAL_YR AS CAL_YR,
  FISCAL_DAY_OF_MO_NBR AS FISCAL_DAY_OF_MO_NBR,
  FISCAL_DAY_OF_YR_NBR AS FISCAL_DAY_OF_YR_NBR,
  FISCAL_WK AS FISCAL_WK,
  FISCAL_WK_NBR AS FISCAL_WK_NBR,
  FISCAL_MO AS FISCAL_MO,
  FISCAL_MO_NBR AS FISCAL_MO_NBR,
  FISCAL_MO_NAME AS FISCAL_MO_NAME,
  FISCAL_MO_NAME_ABBR AS FISCAL_MO_NAME_ABBR,
  FISCAL_QTR AS FISCAL_QTR,
  FISCAL_QTR_NBR AS FISCAL_QTR_NBR,
  FISCAL_HALF AS FISCAL_HALF,
  FISCAL_YR AS FISCAL_YR,
  LYR_WEEK_DT AS LYR_WEEK_DT,
  LWK_WEEK_DT AS LWK_WEEK_DT,
  WEEK_DT AS WEEK_DT,
  EST_TIME_CONV_AMT AS EST_TIME_CONV_AMT,
  EST_TIME_CONV_HRS AS EST_TIME_CONV_HRS,
  ES0_TIME_CONV_AMT AS ES0_TIME_CONV_AMT,
  ES0_TIME_CONV_HRS AS ES0_TIME_CONV_HRS,
  CST_TIME_CONV_AMT AS CST_TIME_CONV_AMT,
  CST_TIME_CONV_HRS AS CST_TIME_CONV_HRS,
  CS0_TIME_CONV_AMT AS CS0_TIME_CONV_AMT,
  CS0_TIME_CONV_HRS AS CS0_TIME_CONV_HRS,
  MST_TIME_CONV_AMT AS MST_TIME_CONV_AMT,
  MST_TIME_CONV_HRS AS MST_TIME_CONV_HRS,
  MS0_TIME_CONV_AMT AS MS0_TIME_CONV_AMT,
  MS0_TIME_CONV_HRS AS MS0_TIME_CONV_HRS,
  PST_TIME_CONV_AMT AS PST_TIME_CONV_AMT,
  PST_TIME_CONV_HRS AS PST_TIME_CONV_HRS
FROM
  DAYS"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("Shortcut_to_DAYS_6")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_PS2_EARNED_HRS_BLUE_LAW_SPECIAL_HOL_OT_7


query_7 = f"""SELECT
  Shortcut_to_PS2_EARNED_HRS_2.DAY_DT AS DAY_DT,
  Shortcut_to_PS2_EARNED_HRS_2.LOCATION_ID AS LOCATION_ID,
  Shortcut_to_PS2_EARNED_HRS_2.WFA_BUSN_AREA_ID AS WFA_BUSN_AREA_ID,
  Shortcut_to_PS2_EARNED_HRS_2.EARNED_HRS AS EARNED_HRS,
  Shortcut_to_PS2_EARNED_HRS_2.UPDATE_DT AS UPDATE_DT,
  Shortcut_to_PS2_EARNED_HRS_2.LOAD_DT AS LOAD_DT,
  Shortcut_to_DAYS_6.DAY_DT AS DAY_DT1,
  Shortcut_to_DAYS_6.WEEK_DT AS WEEK_DT,
  Shortcut_to_PS2_CORE_HOLIDAY_LKUP_4.OT_TYPE AS OT_TYPE,
  Shortcut_to_PS2_CORE_HOLIDAY_LKUP_4.DAY_DT AS DAY_DT2,
  Shortcut_to_PS2_CORE_HOLIDAY_LKUP_4.LOCATION_ID AS LOCATION_ID1,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_PS2_EARNED_HRS_2,
  Shortcut_to_PS2_CORE_HOLIDAY_LKUP_4,
  Shortcut_to_DAYS_6
WHERE
  Shortcut_to_PS2_EARNED_HRS_2.DAY_DT = Shortcut_to_PS2_CORE_HOLIDAY_LKUP_4.DAY_DT
  AND Shortcut_to_PS2_EARNED_HRS_2.LOCATION_ID = Shortcut_to_PS2_CORE_HOLIDAY_LKUP_4.LOCATION_ID
  AND Shortcut_to_PS2_EARNED_HRS_2.DAY_DT = Shortcut_to_DAYS_6.DAY_DT
  AND Shortcut_to_PS2_EARNED_HRS_2.WFA_BUSN_AREA_ID <> 1 -- filter store management hrs
  AND Shortcut_to_PS2_CORE_HOLIDAY_LKUP_4.OT_TYPE = 'BLUELAWOT' --AND Shortcut_to_PS2_EARNED_HRS_2.LOCATION_ID = 473
  --AND Shortcut_to_DAYS_6.WEEK_DT = '04-jul-2010'"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("SQ_Shortcut_to_PS2_EARNED_HRS_BLUE_LAW_SPECIAL_HOL_OT_7")

# COMMAND ----------
# DBTITLE 1, AGGTRANS_8


query_8 = f"""SELECT
  DAY_DT AS DAY_DT,
  WEEK_DT AS WEEK_DT,
  LOCATION_ID AS LOCATION_ID,
  SUM(EARNED_HRS) AS EARNED_HRS,
  last(Monotonically_Increasing_Id) AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_PS2_EARNED_HRS_BLUE_LAW_SPECIAL_HOL_OT_7
GROUP BY
  DAY_DT,
  WEEK_DT,
  LOCATION_ID"""

df_8 = spark.sql(query_8)

df_8.createOrReplaceTempView("AGGTRANS_8")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_DAYS2_9


query_9 = f"""SELECT
  DAY_DT AS DAY_DT,
  BUSINESS_DAY_FLAG AS BUSINESS_DAY_FLAG,
  HOLIDAY_FLAG AS HOLIDAY_FLAG,
  DAY_OF_WK_NAME AS DAY_OF_WK_NAME,
  DAY_OF_WK_NAME_ABBR AS DAY_OF_WK_NAME_ABBR,
  DAY_OF_WK_NBR AS DAY_OF_WK_NBR,
  CAL_DAY_OF_MO_NBR AS CAL_DAY_OF_MO_NBR,
  CAL_DAY_OF_YR_NBR AS CAL_DAY_OF_YR_NBR,
  CAL_WK AS CAL_WK,
  CAL_WK_NBR AS CAL_WK_NBR,
  CAL_MO AS CAL_MO,
  CAL_MO_NBR AS CAL_MO_NBR,
  CAL_MO_NAME AS CAL_MO_NAME,
  CAL_MO_NAME_ABBR AS CAL_MO_NAME_ABBR,
  CAL_QTR AS CAL_QTR,
  CAL_QTR_NBR AS CAL_QTR_NBR,
  CAL_HALF AS CAL_HALF,
  CAL_YR AS CAL_YR,
  FISCAL_DAY_OF_MO_NBR AS FISCAL_DAY_OF_MO_NBR,
  FISCAL_DAY_OF_YR_NBR AS FISCAL_DAY_OF_YR_NBR,
  FISCAL_WK AS FISCAL_WK,
  FISCAL_WK_NBR AS FISCAL_WK_NBR,
  FISCAL_MO AS FISCAL_MO,
  FISCAL_MO_NBR AS FISCAL_MO_NBR,
  FISCAL_MO_NAME AS FISCAL_MO_NAME,
  FISCAL_MO_NAME_ABBR AS FISCAL_MO_NAME_ABBR,
  FISCAL_QTR AS FISCAL_QTR,
  FISCAL_QTR_NBR AS FISCAL_QTR_NBR,
  FISCAL_HALF AS FISCAL_HALF,
  FISCAL_YR AS FISCAL_YR,
  LYR_WEEK_DT AS LYR_WEEK_DT,
  LWK_WEEK_DT AS LWK_WEEK_DT,
  WEEK_DT AS WEEK_DT,
  EST_TIME_CONV_AMT AS EST_TIME_CONV_AMT,
  EST_TIME_CONV_HRS AS EST_TIME_CONV_HRS,
  ES0_TIME_CONV_AMT AS ES0_TIME_CONV_AMT,
  ES0_TIME_CONV_HRS AS ES0_TIME_CONV_HRS,
  CST_TIME_CONV_AMT AS CST_TIME_CONV_AMT,
  CST_TIME_CONV_HRS AS CST_TIME_CONV_HRS,
  CS0_TIME_CONV_AMT AS CS0_TIME_CONV_AMT,
  CS0_TIME_CONV_HRS AS CS0_TIME_CONV_HRS,
  MST_TIME_CONV_AMT AS MST_TIME_CONV_AMT,
  MST_TIME_CONV_HRS AS MST_TIME_CONV_HRS,
  MS0_TIME_CONV_AMT AS MS0_TIME_CONV_AMT,
  MS0_TIME_CONV_HRS AS MS0_TIME_CONV_HRS,
  PST_TIME_CONV_AMT AS PST_TIME_CONV_AMT,
  PST_TIME_CONV_HRS AS PST_TIME_CONV_HRS
FROM
  DAYS"""

df_9 = spark.sql(query_9)

df_9.createOrReplaceTempView("Shortcut_to_DAYS2_9")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_PS2_EARNED_HRS_BLUE_LAW_SUN_OT_10


query_10 = f"""SELECT
  Shortcut_to_PS2_EARNED_HRS2_3.DAY_DT AS DAY_DT,
  Shortcut_to_PS2_EARNED_HRS2_3.LOCATION_ID AS LOCATION_ID,
  Shortcut_to_PS2_EARNED_HRS2_3.WFA_BUSN_AREA_ID AS WFA_BUSN_AREA_ID,
  Shortcut_to_PS2_EARNED_HRS2_3.STORE_NBR AS STORE_NBR,
  Shortcut_to_PS2_EARNED_HRS2_3.EARNED_HRS AS EARNED_HRS,
  Shortcut_to_DAYS2_9.DAY_DT AS DAY_DT1,
  Shortcut_to_DAYS2_9.DAY_OF_WK_NBR AS DAY_OF_WK_NBR,
  Shortcut_to_DAYS2_9.WEEK_DT AS WEEK_DT,
  Shortcut_to_PS2_BLUE_LAW_STORE_LKUP_0.LOCATION_ID AS LOCATION_ID1,
  Shortcut_to_PS2_BLUE_LAW_STORE_LKUP_0.EFF_DT AS EFF_DT,
  Shortcut_to_PS2_BLUE_LAW_STORE_LKUP_0.END_DT AS END_DT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_PS2_EARNED_HRS2_3,
  Shortcut_to_PS2_BLUE_LAW_STORE_LKUP_0,
  Shortcut_to_DAYS2_9
WHERE
  Shortcut_to_PS2_EARNED_HRS2_3.DAY_DT = Shortcut_to_DAYS2_9.DAY_DT
  AND Shortcut_to_PS2_EARNED_HRS2_3.LOCATION_ID = Shortcut_to_PS2_BLUE_LAW_STORE_LKUP_0.LOCATION_ID
  AND Shortcut_to_DAYS2_9.WEEK_DT BETWEEN Shortcut_to_PS2_BLUE_LAW_STORE_LKUP_0.EFF_DT
  AND Shortcut_to_PS2_BLUE_LAW_STORE_LKUP_0.END_DT
  AND Shortcut_to_DAYS2_9.DAY_OF_WK_NBR = 7
  AND Shortcut_to_PS2_EARNED_HRS2_3.WFA_BUSN_AREA_ID <> 1 --AND Shortcut_to_PS2_EARNED_HRS2_3.LOCATION_ID = 473
  --AND Shortcut_to_DAYS2_9.WEEK_DT = '04-jul-2010'"""

df_10 = spark.sql(query_10)

df_10.createOrReplaceTempView("SQ_Shortcut_to_PS2_EARNED_HRS_BLUE_LAW_SUN_OT_10")

# COMMAND ----------
# DBTITLE 1, AGGTRANS2_11


query_11 = f"""SELECT
  DAY_DT AS DAY_DT,
  WEEK_DT AS WEEK_DT,
  LOCATION_ID AS LOCATION_ID,
  SUM(EARNED_HRS) AS EARNED_HRS,
  last(Monotonically_Increasing_Id) AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_PS2_EARNED_HRS_BLUE_LAW_SUN_OT_10
GROUP BY
  DAY_DT,
  WEEK_DT,
  LOCATION_ID"""

df_11 = spark.sql(query_11)

df_11.createOrReplaceTempView("AGGTRANS2_11")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_DAYS1_12


query_12 = f"""SELECT
  DAY_DT AS DAY_DT,
  BUSINESS_DAY_FLAG AS BUSINESS_DAY_FLAG,
  HOLIDAY_FLAG AS HOLIDAY_FLAG,
  DAY_OF_WK_NAME AS DAY_OF_WK_NAME,
  DAY_OF_WK_NAME_ABBR AS DAY_OF_WK_NAME_ABBR,
  DAY_OF_WK_NBR AS DAY_OF_WK_NBR,
  CAL_DAY_OF_MO_NBR AS CAL_DAY_OF_MO_NBR,
  CAL_DAY_OF_YR_NBR AS CAL_DAY_OF_YR_NBR,
  CAL_WK AS CAL_WK,
  CAL_WK_NBR AS CAL_WK_NBR,
  CAL_MO AS CAL_MO,
  CAL_MO_NBR AS CAL_MO_NBR,
  CAL_MO_NAME AS CAL_MO_NAME,
  CAL_MO_NAME_ABBR AS CAL_MO_NAME_ABBR,
  CAL_QTR AS CAL_QTR,
  CAL_QTR_NBR AS CAL_QTR_NBR,
  CAL_HALF AS CAL_HALF,
  CAL_YR AS CAL_YR,
  FISCAL_DAY_OF_MO_NBR AS FISCAL_DAY_OF_MO_NBR,
  FISCAL_DAY_OF_YR_NBR AS FISCAL_DAY_OF_YR_NBR,
  FISCAL_WK AS FISCAL_WK,
  FISCAL_WK_NBR AS FISCAL_WK_NBR,
  FISCAL_MO AS FISCAL_MO,
  FISCAL_MO_NBR AS FISCAL_MO_NBR,
  FISCAL_MO_NAME AS FISCAL_MO_NAME,
  FISCAL_MO_NAME_ABBR AS FISCAL_MO_NAME_ABBR,
  FISCAL_QTR AS FISCAL_QTR,
  FISCAL_QTR_NBR AS FISCAL_QTR_NBR,
  FISCAL_HALF AS FISCAL_HALF,
  FISCAL_YR AS FISCAL_YR,
  LYR_WEEK_DT AS LYR_WEEK_DT,
  LWK_WEEK_DT AS LWK_WEEK_DT,
  WEEK_DT AS WEEK_DT,
  EST_TIME_CONV_AMT AS EST_TIME_CONV_AMT,
  EST_TIME_CONV_HRS AS EST_TIME_CONV_HRS,
  ES0_TIME_CONV_AMT AS ES0_TIME_CONV_AMT,
  ES0_TIME_CONV_HRS AS ES0_TIME_CONV_HRS,
  CST_TIME_CONV_AMT AS CST_TIME_CONV_AMT,
  CST_TIME_CONV_HRS AS CST_TIME_CONV_HRS,
  CS0_TIME_CONV_AMT AS CS0_TIME_CONV_AMT,
  CS0_TIME_CONV_HRS AS CS0_TIME_CONV_HRS,
  MST_TIME_CONV_AMT AS MST_TIME_CONV_AMT,
  MST_TIME_CONV_HRS AS MST_TIME_CONV_HRS,
  MS0_TIME_CONV_AMT AS MS0_TIME_CONV_AMT,
  MS0_TIME_CONV_HRS AS MS0_TIME_CONV_HRS,
  PST_TIME_CONV_AMT AS PST_TIME_CONV_AMT,
  PST_TIME_CONV_HRS AS PST_TIME_CONV_HRS
FROM
  DAYS"""

df_12 = spark.sql(query_12)

df_12.createOrReplaceTempView("Shortcut_to_DAYS1_12")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_SITE_PROFILE_13


query_13 = f"""SELECT
  LOCATION_ID AS LOCATION_ID,
  LOCATION_TYPE_ID AS LOCATION_TYPE_ID,
  STORE_NBR AS STORE_NBR,
  STORE_NAME AS STORE_NAME,
  STORE_TYPE_ID AS STORE_TYPE_ID,
  STORE_OPEN_CLOSE_FLAG AS STORE_OPEN_CLOSE_FLAG,
  COMPANY_ID AS COMPANY_ID,
  REGION_ID AS REGION_ID,
  DISTRICT_ID AS DISTRICT_ID,
  PRICE_ZONE_ID AS PRICE_ZONE_ID,
  PRICE_AD_ZONE_ID AS PRICE_AD_ZONE_ID,
  REPL_DC_NBR AS REPL_DC_NBR,
  REPL_FISH_DC_NBR AS REPL_FISH_DC_NBR,
  REPL_FWD_DC_NBR AS REPL_FWD_DC_NBR,
  SQ_FEET_RETAIL AS SQ_FEET_RETAIL,
  SQ_FEET_TOTAL AS SQ_FEET_TOTAL,
  SITE_ADDRESS AS SITE_ADDRESS,
  SITE_CITY AS SITE_CITY,
  STATE_CD AS STATE_CD,
  COUNTRY_CD AS COUNTRY_CD,
  POSTAL_CD AS POSTAL_CD,
  SITE_MAIN_TELE_NO AS SITE_MAIN_TELE_NO,
  SITE_GROOM_TELE_NO AS SITE_GROOM_TELE_NO,
  SITE_EMAIL_ADDRESS AS SITE_EMAIL_ADDRESS,
  SITE_SALES_FLAG AS SITE_SALES_FLAG,
  EQUINE_MERCH_ID AS EQUINE_MERCH_ID,
  EQUINE_SITE_ID AS EQUINE_SITE_ID,
  EQUINE_SITE_OPEN_DT AS EQUINE_SITE_OPEN_DT,
  GEO_LATITUDE_NBR AS GEO_LATITUDE_NBR,
  GEO_LONGITUDE_NBR AS GEO_LONGITUDE_NBR,
  PETSMART_DMA_CD AS PETSMART_DMA_CD,
  LOYALTY_PGM_TYPE_ID AS LOYALTY_PGM_TYPE_ID,
  LOYALTY_PGM_STATUS_ID AS LOYALTY_PGM_STATUS_ID,
  LOYALTY_PGM_START_DT AS LOYALTY_PGM_START_DT,
  LOYALTY_PGM_CHANGE_DT AS LOYALTY_PGM_CHANGE_DT,
  BP_COMPANY_NBR AS BP_COMPANY_NBR,
  BP_GL_ACCT AS BP_GL_ACCT,
  TP_LOC_FLAG AS TP_LOC_FLAG,
  TP_ACTIVE_CNT AS TP_ACTIVE_CNT,
  PROMO_LABEL_CD AS PROMO_LABEL_CD,
  PARENT_LOCATION_ID AS PARENT_LOCATION_ID,
  LOCATION_NBR AS LOCATION_NBR,
  TIME_ZONE_ID AS TIME_ZONE_ID,
  DELV_SERVICE_CLASS_ID AS DELV_SERVICE_CLASS_ID,
  PICK_SERVICE_CLASS_ID AS PICK_SERVICE_CLASS_ID,
  SITE_LOGIN_ID AS SITE_LOGIN_ID,
  SITE_MANAGER_ID AS SITE_MANAGER_ID,
  SITE_OPEN_YRS_AMT AS SITE_OPEN_YRS_AMT,
  HOTEL_FLAG AS HOTEL_FLAG,
  DAYCAMP_FLAG AS DAYCAMP_FLAG,
  VET_FLAG AS VET_FLAG,
  DIST_MGR_NAME AS DIST_MGR_NAME,
  DIST_SVC_MGR_NAME AS DIST_SVC_MGR_NAME,
  REGION_VP_NAME AS REGION_VP_NAME,
  REGION_TRAINER_NAME AS REGION_TRAINER_NAME,
  ASSET_PROTECT_NAME AS ASSET_PROTECT_NAME,
  SITE_COUNTY AS SITE_COUNTY,
  SITE_FAX_NO AS SITE_FAX_NO,
  SFT_OPEN_DT AS SFT_OPEN_DT,
  DM_EMAIL_ADDRESS AS DM_EMAIL_ADDRESS,
  DSM_EMAIL_ADDRESS AS DSM_EMAIL_ADDRESS,
  RVP_EMAIL_ADDRESS AS RVP_EMAIL_ADDRESS,
  TRADE_AREA AS TRADE_AREA,
  FDLPS_NAME AS FDLPS_NAME,
  FDLPS_EMAIL AS FDLPS_EMAIL,
  OVERSITE_MGR_NAME AS OVERSITE_MGR_NAME,
  OVERSITE_MGR_EMAIL AS OVERSITE_MGR_EMAIL,
  SAFETY_DIRECTOR_NAME AS SAFETY_DIRECTOR_NAME,
  SAFETY_DIRECTOR_EMAIL AS SAFETY_DIRECTOR_EMAIL,
  RETAIL_MANAGER_SAFETY_NAME AS RETAIL_MANAGER_SAFETY_NAME,
  RETAIL_MANAGER_SAFETY_EMAIL AS RETAIL_MANAGER_SAFETY_EMAIL,
  AREA_DIRECTOR_NAME AS AREA_DIRECTOR_NAME,
  AREA_DIRECTOR_EMAIL AS AREA_DIRECTOR_EMAIL,
  DC_GENERAL_MANAGER_NAME AS DC_GENERAL_MANAGER_NAME,
  DC_GENERAL_MANAGER_EMAIL AS DC_GENERAL_MANAGER_EMAIL,
  ASST_DC_GENERAL_MANAGER_NAME1 AS ASST_DC_GENERAL_MANAGER_NAME1,
  ASST_DC_GENERAL_MANAGER_EMAIL1 AS ASST_DC_GENERAL_MANAGER_EMAIL1,
  ASST_DC_GENERAL_MANAGER_NAME2 AS ASST_DC_GENERAL_MANAGER_NAME2,
  ASST_DC_GENERAL_MANAGER_EMAIL2 AS ASST_DC_GENERAL_MANAGER_EMAIL2,
  REGIONAL_DC_SAFETY_MGR_NAME AS REGIONAL_DC_SAFETY_MGR_NAME,
  REGIONAL_DC_SAFETY_MGR_EMAIL AS REGIONAL_DC_SAFETY_MGR_EMAIL,
  DC_PEOPLE_SUPERVISOR_NAME AS DC_PEOPLE_SUPERVISOR_NAME,
  DC_PEOPLE_SUPERVISOR_EMAIL AS DC_PEOPLE_SUPERVISOR_EMAIL,
  PEOPLE_MANAGER_NAME AS PEOPLE_MANAGER_NAME,
  PEOPLE_MANAGER_EMAIL AS PEOPLE_MANAGER_EMAIL,
  ASSET_PROT_DIR_NAME AS ASSET_PROT_DIR_NAME,
  ASSET_PROT_DIR_EMAIL AS ASSET_PROT_DIR_EMAIL,
  SR_REG_ASSET_PROT_MGR_NAME AS SR_REG_ASSET_PROT_MGR_NAME,
  SR_REG_ASSET_PROT_MGR_EMAIL AS SR_REG_ASSET_PROT_MGR_EMAIL,
  REG_ASSET_PROT_MGR_NAME AS REG_ASSET_PROT_MGR_NAME,
  REG_ASSET_PROT_MGR_EMAIL AS REG_ASSET_PROT_MGR_EMAIL,
  ASSET_PROTECT_EMAIL AS ASSET_PROTECT_EMAIL,
  TP_START_DT AS TP_START_DT,
  OPEN_DT AS OPEN_DT,
  GR_OPEN_DT AS GR_OPEN_DT,
  CLOSE_DT AS CLOSE_DT,
  HOTEL_OPEN_DT AS HOTEL_OPEN_DT,
  ADD_DT AS ADD_DT,
  DELETE_DT AS DELETE_DT,
  UPDATE_DT AS UPDATE_DT,
  LOAD_DT AS LOAD_DT
FROM
  SITE_PROFILE"""

df_13 = spark.sql(query_13)

df_13.createOrReplaceTempView("Shortcut_to_SITE_PROFILE_13")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_PS2_EARNED_HRS_SUN_HOL_OT_14


query_14 = f"""SELECT
  Shortcut_to_PS2_EARNED_HRS1_1.DAY_DT AS DAY_DT,
  Shortcut_to_PS2_EARNED_HRS1_1.LOCATION_ID AS LOCATION_ID,
  Shortcut_to_PS2_EARNED_HRS1_1.WFA_BUSN_AREA_ID AS WFA_BUSN_AREA_ID,
  Shortcut_to_PS2_EARNED_HRS1_1.STORE_NBR AS STORE_NBR,
  Shortcut_to_PS2_EARNED_HRS1_1.EARNED_HRS AS EARNED_HRS,
  Shortcut_to_DAYS1_12.DAY_DT AS DAY_DT1,
  Shortcut_to_DAYS1_12.WEEK_DT AS WEEK_DT,
  Shortcut_to_PS2_CORE_HOLIDAY_LKUP1_5.DAY_DT AS DAY_DT2,
  Shortcut_to_PS2_CORE_HOLIDAY_LKUP1_5.DEFAULT_STORE_FLAG AS DEFAULT_STORE_FLAG,
  Shortcut_to_PS2_CORE_HOLIDAY_LKUP1_5.OT_TYPE AS OT_TYPE,
  Shortcut_to_SITE_PROFILE_13.LOCATION_ID AS LOCATION_ID1,
  Shortcut_to_SITE_PROFILE_13.COUNTRY_CD AS COUNTRY_CD,
  Shortcut_to_DAYS1_12.DAY_OF_WK_NBR AS DAY_OF_WK_NBR,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_SITE_PROFILE_13,
  Shortcut_to_DAYS1_12,
  Shortcut_to_PS2_CORE_HOLIDAY_LKUP1_5,
  Shortcut_to_PS2_EARNED_HRS1_1
WHERE
  Shortcut_to_PS2_EARNED_HRS1_1.LOCATION_ID = Shortcut_to_SITE_PROFILE_13.LOCATION_ID
  AND Shortcut_to_PS2_EARNED_HRS1_1.DAY_DT = Shortcut_to_PS2_CORE_HOLIDAY_LKUP1_5.DAY_DT
  AND Shortcut_to_SITE_PROFILE_13.COUNTRY_CD = Shortcut_to_PS2_CORE_HOLIDAY_LKUP1_5.COUNTRY_CD
  AND Shortcut_to_PS2_EARNED_HRS1_1.DAY_DT = Shortcut_to_DAYS1_12.DAY_DT
  AND Shortcut_to_PS2_CORE_HOLIDAY_LKUP1_5.DEFAULT_STORE_FLAG = 'Y'
  AND Shortcut_to_PS2_CORE_HOLIDAY_LKUP1_5.OT_TYPE = 'HOLIDAYOT'
  AND Shortcut_to_PS2_EARNED_HRS1_1.WFA_BUSN_AREA_ID <> 1 --AND Shortcut_to_PS2_EARNED_HRS1_1.LOCATION_ID = 473
  --AND Shortcut_to_DAYS1_12.WEEK_DT = '04-jul-2010'"""

df_14 = spark.sql(query_14)

df_14.createOrReplaceTempView("SQ_Shortcut_to_PS2_EARNED_HRS_SUN_HOL_OT_14")

# COMMAND ----------
# DBTITLE 1, LKP_BLUE_LAW_STORES_15


query_15 = f"""SELECT
  PBLSL.LOCATION_ID AS LOCATION_ID,
  PBLSL.EFF_DT AS EFF_DT,
  PBLSL.END_DT AS END_DT,
  PBLSL.STORE_NBR AS STORE_NBR,
  SStPEHSHO1.STORE_NBR AS STORE_NBR1,
  SStPEHSHO1.DAY_DT1 AS DAY_DT1,
  SStPEHSHO1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_PS2_EARNED_HRS_SUN_HOL_OT_14 SStPEHSHO1
  LEFT JOIN PS2_BLUE_LAW_STORE_LKUP PBLSL ON PBLSL.STORE_NBR = SStPEHSHO1.STORE_NBR
  AND PBLSL.EFF_DT <= SStPEHSHO1.DAY_DT1
  AND PBLSL.END_DT > SStPEHSHO1.DAY_DT1"""

df_15 = spark.sql(query_15)

df_15.createOrReplaceTempView("LKP_BLUE_LAW_STORES_15")

# COMMAND ----------
# DBTITLE 1, FIL_BLUE_LAW_STORES_IF_HOL_IS_SUNDAY_16


query_16 = f"""SELECT
  SStPEHSHO1.DAY_DT AS DAY_DT,
  SStPEHSHO1.LOCATION_ID AS LOCATION_ID,
  SStPEHSHO1.EARNED_HRS AS EARNED_HRS,
  SStPEHSHO1.WEEK_DT AS WEEK_DT,
  LBLS1.LOCATION_ID AS LOCATION_ID1,
  SStPEHSHO1.DAY_OF_WK_NBR AS DAY_OF_WK_NBR,
  LBLS1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  LKP_BLUE_LAW_STORES_15 LBLS1
  INNER JOIN SQ_Shortcut_to_PS2_EARNED_HRS_SUN_HOL_OT_14 SStPEHSHO1 ON LBLS1.Monotonically_Increasing_Id = SStPEHSHO1.Monotonically_Increasing_Id
WHERE
  IFF(
    SStPEHSHO1.DAY_OF_WK_NBR = 7
    AND NOT ISNULL(LBLS1.SStPEHSHO1.LOCATION_ID),
    FALSE,
    TRUE
  )"""

df_16 = spark.sql(query_16)

df_16.createOrReplaceTempView("FIL_BLUE_LAW_STORES_IF_HOL_IS_SUNDAY_16")

# COMMAND ----------
# DBTITLE 1, AGGTRANS1_17


query_17 = f"""SELECT
  DAY_DT AS DAY_DT,
  WEEK_DT AS WEEK_DT,
  LOCATION_ID AS LOCATION_ID,
  SUM(EARNED_HRS) AS EARNED_HRS,
  last(Monotonically_Increasing_Id) AS Monotonically_Increasing_Id
FROM
  FIL_BLUE_LAW_STORES_IF_HOL_IS_SUNDAY_16
GROUP BY
  DAY_DT,
  WEEK_DT,
  LOCATION_ID"""

df_17 = spark.sql(query_17)

df_17.createOrReplaceTempView("AGGTRANS1_17")

# COMMAND ----------
# DBTITLE 1, Union_18


query_18 = f"""SELECT
  DAY_DT AS DAY_DT,
  WEEK_DT AS WEEK_DT,
  LOCATION_ID AS LOCATION_ID,
  EARNED_HRS AS EARNED_HRS,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  AGGTRANS1_17
UNION ALL
SELECT
  DAY_DT AS DAY_DT,
  WEEK_DT AS WEEK_DT,
  LOCATION_ID AS LOCATION_ID,
  EARNED_HRS AS EARNED_HRS,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  AGGTRANS2_11
UNION ALL
SELECT
  DAY_DT AS DAY_DT,
  WEEK_DT AS WEEK_DT,
  LOCATION_ID AS LOCATION_ID,
  EARNED_HRS AS EARNED_HRS,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  AGGTRANS_8"""

df_18 = spark.sql(query_18)

df_18.createOrReplaceTempView("Union_18")

# COMMAND ----------
# DBTITLE 1, AGG_DISTINCT_VALUES_19


query_19 = f"""SELECT
  WEEK_DT AS WEEK_DT,
  LOCATION_ID AS LOCATION_ID,
  EARNED_HRS AS EARNED_HRS,
  last(Monotonically_Increasing_Id) AS Monotonically_Increasing_Id
FROM
  Union_18
GROUP BY
  WEEK_DT,
  LOCATION_ID,
  EARNED_HRS"""

df_19 = spark.sql(query_19)

df_19.createOrReplaceTempView("AGG_DISTINCT_VALUES_19")

# COMMAND ----------
# DBTITLE 1, AGGTRANS3_20


query_20 = f"""SELECT
  WEEK_DT AS WEEK_DT,
  LOCATION_ID AS LOCATION_ID,
  SUM(EARNED_HRS) AS EARNED_HRS,
  last(Monotonically_Increasing_Id) AS Monotonically_Increasing_Id
FROM
  AGG_DISTINCT_VALUES_19
GROUP BY
  WEEK_DT,
  LOCATION_ID"""

df_20 = spark.sql(query_20)

df_20.createOrReplaceTempView("AGGTRANS3_20")

# COMMAND ----------
# DBTITLE 1, PS2_CORE_OT_PRE


spark.sql("""INSERT INTO
  PS2_CORE_OT_PRE
SELECT
  WEEK_DT AS WEEK_DT,
  LOCATION_ID AS LOCATION_ID,
  EARNED_HRS AS OVER_TIME_HRS
FROM
  AGGTRANS3_20""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_ps2_core_ot_pre")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_ps2_core_ot_pre", mainWorkflowId, parentName)
