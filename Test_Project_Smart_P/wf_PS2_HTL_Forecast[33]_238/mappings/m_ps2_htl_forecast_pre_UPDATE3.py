# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ./MappingUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_ps2_htl_forecast_pre_UPDATE3")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_ps2_htl_forecast_pre_UPDATE3", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PS2_HTL_FORECAST_TY_LY_TOTAL_PRE_0


query_0 = f"""SELECT
  FORECAST_DAY_DT AS FORECAST_DAY_DT,
  DAY_DT AS DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  TY_OVERNIGHT_KITTY_GUEST AS TY_OVERNIGHT_KITTY_GUEST,
  LY_OVERNIGHT_KITTY_GUEST AS LY_OVERNIGHT_KITTY_GUEST,
  TY_OVERNIGHT_DOG_GUEST AS TY_OVERNIGHT_DOG_GUEST,
  LY_OVERNIGHT_DOG_GUEST AS LY_OVERNIGHT_DOG_GUEST,
  TY_OVERNIGHT_WITH_DDC AS TY_OVERNIGHT_WITH_DDC,
  LY_OVERNIGHT_WITH_DDC AS LY_OVERNIGHT_WITH_DDC,
  TY_DAY_CAMP_PLAYROOM AS TY_DAY_CAMP_PLAYROOM,
  LY_DAY_CAMP_PLAYROOM AS LY_DAY_CAMP_PLAYROOM,
  TY_DAY_CARE AS TY_DAY_CARE,
  LY_DAY_CARE AS LY_DAY_CARE
FROM
  PS2_HTL_FORECAST_TY_LY_TOTAL_PRE"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_PS2_HTL_FORECAST_TY_LY_TOTAL_PRE_0")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_PS2_HTL_FORECAST_TY_LY_TOTAL_PRE_1


query_1 = f"""SELECT
  FORECAST_DAY_DT AS FORECAST_DAY_DT,
  DAY_DT AS DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  TY_OVERNIGHT_KITTY_GUEST AS TY_OVERNIGHT_KITTY_GUEST,
  LY_OVERNIGHT_KITTY_GUEST AS LY_OVERNIGHT_KITTY_GUEST,
  TY_OVERNIGHT_DOG_GUEST AS TY_OVERNIGHT_DOG_GUEST,
  LY_OVERNIGHT_DOG_GUEST AS LY_OVERNIGHT_DOG_GUEST,
  TY_OVERNIGHT_WITH_DDC AS TY_OVERNIGHT_WITH_DDC,
  LY_OVERNIGHT_WITH_DDC AS LY_OVERNIGHT_WITH_DDC,
  TY_DAY_CAMP_PLAYROOM AS TY_DAY_CAMP_PLAYROOM,
  LY_DAY_CAMP_PLAYROOM AS LY_DAY_CAMP_PLAYROOM,
  TY_DAY_CARE AS TY_DAY_CARE,
  LY_DAY_CARE AS LY_DAY_CARE,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_PS2_HTL_FORECAST_TY_LY_TOTAL_PRE_0"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("SQ_Shortcut_to_PS2_HTL_FORECAST_TY_LY_TOTAL_PRE_1")

# COMMAND ----------
# DBTITLE 1, EXP_Total_2


query_2 = f"""SELECT
  FORECAST_DAY_DT AS FORECAST_DAY_DT,
  DAY_DT AS DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  TY_DAY_CAMP_PLAYROOM + TY_DAY_CARE AS TY_DAY_GUEST_CNT,
  LY_DAY_CAMP_PLAYROOM + LY_DAY_CARE AS LY_DAY_GUEST_CNT,
  TY_DAY_CAMP_PLAYROOM + TY_OVERNIGHT_WITH_DDC AS TY_TOTAL_DAYCAMP_CNT,
  LY_DAY_CAMP_PLAYROOM + LY_OVERNIGHT_WITH_DDC AS LY_TOTAL_DAYCAMP_CNT,
  TY_OVERNIGHT_KITTY_GUEST + TY_OVERNIGHT_DOG_GUEST + TY_DAY_CAMP_PLAYROOM + TY_DAY_CARE AS TY_TOTAL_GUEST_CNT,
  LY_OVERNIGHT_KITTY_GUEST + LY_OVERNIGHT_DOG_GUEST + LY_DAY_CAMP_PLAYROOM + LY_DAY_CARE AS LY_TOTAL_GUEST_CNT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_PS2_HTL_FORECAST_TY_LY_TOTAL_PRE_1"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("EXP_Total_2")

# COMMAND ----------
# DBTITLE 1, LKP_DAYS_NBR_3


query_3 = f"""SELECT
  D.DAY_DT AS DAY_DT,
  D.WEEK_DT AS WEEK_DT,
  ET2.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_Total_2 ET2
  LEFT JOIN DAYS D ON D.DAY_DT = ET2.DAY_DT"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("LKP_DAYS_NBR_3")

# COMMAND ----------
# DBTITLE 1, SRT_WEEK_4


query_4 = f"""SELECT
  ET2.LOCATION_ID AS LOCATION_ID,
  LDN3.WEEK_DT AS WEEK_DT,
  LDN3.DAY_DT AS DAY_DT,
  ET2.FORECAST_DAY_DT AS FORECAST_DAY,
  ET2.TY_DAY_GUEST_CNT AS TY_DAY_GUEST_CNT,
  ET2.LY_DAY_GUEST_CNT AS LY_DAY_GUEST_CNT,
  ET2.TY_TOTAL_DAYCAMP_CNT AS TY_TOTAL_DAYCAMP_CNT,
  ET2.LY_TOTAL_DAYCAMP_CNT AS LY_TOTAL_DAYCAMP_CNT,
  ET2.TY_TOTAL_GUEST_CNT AS TY_TOTAL_GUEST_CNT,
  ET2.LY_TOTAL_GUEST_CNT AS LY_TOTAL_GUEST_CNT,
  LDN3.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  LKP_DAYS_NBR_3 LDN3
  INNER JOIN EXP_Total_2 ET2 ON LDN3.Monotonically_Increasing_Id = ET2.Monotonically_Increasing_Id
ORDER BY
  LOCATION_ID ASC,
  WEEK_DT DESC,
  DAY_DT DESC"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("SRT_WEEK_4")

# COMMAND ----------
# DBTITLE 1, EXP_WEEK_NBR_5


query_5 = f"""SELECT
  LOCATION_ID AS LOCATION_ID,
  FORECAST_DAY AS FORECAST_DAY,
  TY_DAY_GUEST_CNT AS TY_DAY_GUEST_CNT,
  LY_DAY_GUEST_CNT AS LY_DAY_GUEST_CNT,
  TY_TOTAL_DAYCAMP_CNT AS TY_TOTAL_DAYCAMP_CNT,
  TY_TOTAL_GUEST_CNT AS TY_TOTAL_GUEST_CNT,
  LY_TOTAL_DAYCAMP_CNT AS LY_TOTAL_DAYCAMP_CNT,
  LY_TOTAL_GUEST_CNT AS LY_TOTAL_GUEST_CNT,
  IFF(v_COUNT = 42, 1, v_COUNT + 1) AS v_COUNT,
  1 AS LIMIT_HIGH_ID,
  2 AS LIMIT_LOW_ID,
  IFF(
    IFF(v_COUNT = 42, 1, v_COUNT + 1) >= 1
    AND IFF(v_COUNT = 42, 1, v_COUNT + 1) <= 7,
    1,
    IFF(
      IFF(v_COUNT = 42, 1, v_COUNT + 1) >= 8
      AND IFF(v_COUNT = 42, 1, v_COUNT + 1) <= 14,
      2,
      IFF(
        IFF(v_COUNT = 42, 1, v_COUNT + 1) >= 15
        AND IFF(v_COUNT = 42, 1, v_COUNT + 1) <= 21,
        3,
        IFF(
          IFF(v_COUNT = 42, 1, v_COUNT + 1) >= 22
          AND IFF(v_COUNT = 42, 1, v_COUNT + 1) <= 28,
          4,
          IFF(
            IFF(v_COUNT = 42, 1, v_COUNT + 1) >= 29
            AND IFF(v_COUNT = 42, 1, v_COUNT + 1) <= 35,
            5,
            IFF(
              IFF(v_COUNT = 42, 1, v_COUNT + 1) >= 36
              AND IFF(v_COUNT = 42, 1, v_COUNT + 1) <= 42,
              6,
              0
            )
          )
        )
      )
    )
  ) AS WEEK_NBR,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SRT_WEEK_4"""

df_5 = spark.sql(query_5)

df_5.createOrReplaceTempView("EXP_WEEK_NBR_5")

# COMMAND ----------
# DBTITLE 1, LKP_DAYS_6


query_6 = f"""SELECT
  D.DAY_OF_WK_NBR AS DAY_OF_WK_NBR,
  D.WEEK_DT AS WEEK_DT,
  EWN5.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_WEEK_NBR_5 EWN5
  LEFT JOIN DAYS D ON D.DAY_DT = EWN5.FORECAST_DAY"""

df_6 = spark.sql(query_6)

df_6.createOrReplaceTempView("LKP_DAYS_6")

# COMMAND ----------
# DBTITLE 1, LKP_PS2_HTL_LIMITS_HIGH_7


query_7 = f"""SELECT
  PHL.LIMIT_QTY AS LIMIT_QTY,
  EWN5.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_WEEK_NBR_5 EWN5
  LEFT JOIN PS2_HTL_LIMITS PHL ON PHL.LIMIT_ID = EWN5.LIMIT_HIGH_ID"""

df_7 = spark.sql(query_7)

df_7.createOrReplaceTempView("LKP_PS2_HTL_LIMITS_HIGH_7")

# COMMAND ----------
# DBTITLE 1, LKP_PS2_HTL_LIMITS_LOW_8


query_8 = f"""SELECT
  PHL.LIMIT_QTY AS LIMIT_QTY,
  EWN5.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_WEEK_NBR_5 EWN5
  LEFT JOIN PS2_HTL_LIMITS PHL ON PHL.LIMIT_ID = EWN5.LIMIT_LOW_ID"""

df_8 = spark.sql(query_8)

df_8.createOrReplaceTempView("LKP_PS2_HTL_LIMITS_LOW_8")

# COMMAND ----------
# DBTITLE 1, EXP_Limits_9


query_9 = f"""SELECT
  EWN5.FORECAST_DAY AS FORECAST_DAY,
  EWN5.LOCATION_ID AS LOCATION_ID,
  LD6.DAY_OF_WK_NBR AS DAY_OF_WK_NBR,
  LD6.WEEK_DT AS WEEK_DT,
  IFF(ISNULL(i_TY_DAY_GUEST_CNT), 0, i_TY_DAY_GUEST_CNT) AS TY_DAY_GUEST_CNT,
  IFF(ISNULL(i_LY_DAY_GUEST_CNT), 0, i_LY_DAY_GUEST_CNT) AS LY_DAY_GUEST_CNT,
  IFF(
    ISNULL(i_TY_TOTAL_DAYCAMP_CNT),
    0,
    i_TY_TOTAL_DAYCAMP_CNT
  ) AS TY_TOTAL_DAYCAMP_CNT,
  IFF(
    ISNULL(i_TY_TOTAL_GUEST_CNT),
    0,
    i_TY_TOTAL_GUEST_CNT
  ) AS TY_TOTAL_GUEST_CNT,
  IFF(
    ISNULL(i_LY_TOTAL_DAYCAMP_CNT),
    0,
    i_LY_TOTAL_DAYCAMP_CNT
  ) AS LY_TOTAL_DAYCAMP_CNT,
  IFF(
    ISNULL(i_LY_TOTAL_GUEST_CNT),
    0,
    i_LY_TOTAL_GUEST_CNT
  ) AS LY_TOTAL_GUEST_CNT,
  EWN5.WEEK_NBR AS WEEK_NBR,
  ROUND(
    IFF (
      IFF(
        IFF(
          ISNULL(EWN5.LY_DAY_GUEST_CNT),
          0,
          EWN5.LY_DAY_GUEST_CNT
        ) <> 0.00,
        IFF(
          ISNULL(EWN5.TY_DAY_GUEST_CNT),
          0,
          EWN5.TY_DAY_GUEST_CNT
        ) / IFF(
          ISNULL(EWN5.LY_DAY_GUEST_CNT),
          0,
          EWN5.LY_DAY_GUEST_CNT
        ) -1,
        0.00
      ) > LPHLH7.LIMIT_QTY,
      LPHLH7.LIMIT_QTY,
      IFF (
        IFF(
          IFF(
            ISNULL(EWN5.LY_DAY_GUEST_CNT),
            0,
            EWN5.LY_DAY_GUEST_CNT
          ) <> 0.00,
          IFF(
            ISNULL(EWN5.TY_DAY_GUEST_CNT),
            0,
            EWN5.TY_DAY_GUEST_CNT
          ) / IFF(
            ISNULL(EWN5.LY_DAY_GUEST_CNT),
            0,
            EWN5.LY_DAY_GUEST_CNT
          ) -1,
          0.00
        ) < LPHLL8.LIMIT_QTY,
        LPHLL8.LIMIT_QTY,
        IFF(
          IFF(
            ISNULL(EWN5.LY_DAY_GUEST_CNT),
            0,
            EWN5.LY_DAY_GUEST_CNT
          ) <> 0.00,
          IFF(
            ISNULL(EWN5.TY_DAY_GUEST_CNT),
            0,
            EWN5.TY_DAY_GUEST_CNT
          ) / IFF(
            ISNULL(EWN5.LY_DAY_GUEST_CNT),
            0,
            EWN5.LY_DAY_GUEST_CNT
          ) -1,
          0.00
        )
      )
    ),
    5
  ) AS DAY_GUEST_CNT,
  ROUND(
    IFF (
      IFF(
        IFF(
          ISNULL(EWN5.LY_TOTAL_DAYCAMP_CNT),
          0,
          EWN5.LY_TOTAL_DAYCAMP_CNT
        ) <> 0.00,
        IFF(
          ISNULL(EWN5.TY_TOTAL_DAYCAMP_CNT),
          0,
          EWN5.TY_TOTAL_DAYCAMP_CNT
        ) / IFF(
          ISNULL(EWN5.LY_TOTAL_DAYCAMP_CNT),
          0,
          EWN5.LY_TOTAL_DAYCAMP_CNT
        ) -1,
        0.00
      ) > LPHLH7.LIMIT_QTY,
      LPHLH7.LIMIT_QTY,
      IFF (
        IFF(
          IFF(
            ISNULL(EWN5.LY_TOTAL_DAYCAMP_CNT),
            0,
            EWN5.LY_TOTAL_DAYCAMP_CNT
          ) <> 0.00,
          IFF(
            ISNULL(EWN5.TY_TOTAL_DAYCAMP_CNT),
            0,
            EWN5.TY_TOTAL_DAYCAMP_CNT
          ) / IFF(
            ISNULL(EWN5.LY_TOTAL_DAYCAMP_CNT),
            0,
            EWN5.LY_TOTAL_DAYCAMP_CNT
          ) -1,
          0.00
        ) < LPHLL8.LIMIT_QTY,
        LPHLL8.LIMIT_QTY,
        IFF(
          IFF(
            ISNULL(EWN5.LY_TOTAL_DAYCAMP_CNT),
            0,
            EWN5.LY_TOTAL_DAYCAMP_CNT
          ) <> 0.00,
          IFF(
            ISNULL(EWN5.TY_TOTAL_DAYCAMP_CNT),
            0,
            EWN5.TY_TOTAL_DAYCAMP_CNT
          ) / IFF(
            ISNULL(EWN5.LY_TOTAL_DAYCAMP_CNT),
            0,
            EWN5.LY_TOTAL_DAYCAMP_CNT
          ) -1,
          0.00
        )
      )
    ),
    5
  ) AS TOTAL_DAYCAMP_CNT,
  ROUND(
    IFF (
      IFF(
        IFF(
          ISNULL(EWN5.LY_TOTAL_GUEST_CNT),
          0,
          EWN5.LY_TOTAL_GUEST_CNT
        ) <> 0.00,
        IFF(
          ISNULL(EWN5.TY_TOTAL_GUEST_CNT),
          0,
          EWN5.TY_TOTAL_GUEST_CNT
        ) / IFF(
          ISNULL(EWN5.LY_TOTAL_GUEST_CNT),
          0,
          EWN5.LY_TOTAL_GUEST_CNT
        ) -1,
        0.00
      ) > LPHLH7.LIMIT_QTY,
      LPHLH7.LIMIT_QTY,
      IFF (
        IFF(
          IFF(
            ISNULL(EWN5.LY_TOTAL_GUEST_CNT),
            0,
            EWN5.LY_TOTAL_GUEST_CNT
          ) <> 0.00,
          IFF(
            ISNULL(EWN5.TY_TOTAL_GUEST_CNT),
            0,
            EWN5.TY_TOTAL_GUEST_CNT
          ) / IFF(
            ISNULL(EWN5.LY_TOTAL_GUEST_CNT),
            0,
            EWN5.LY_TOTAL_GUEST_CNT
          ) -1,
          0.00
        ) < LPHLL8.LIMIT_QTY,
        LPHLL8.LIMIT_QTY,
        IFF(
          IFF(
            ISNULL(EWN5.LY_TOTAL_GUEST_CNT),
            0,
            EWN5.LY_TOTAL_GUEST_CNT
          ) <> 0.00,
          IFF(
            ISNULL(EWN5.TY_TOTAL_GUEST_CNT),
            0,
            EWN5.TY_TOTAL_GUEST_CNT
          ) / IFF(
            ISNULL(EWN5.LY_TOTAL_GUEST_CNT),
            0,
            EWN5.LY_TOTAL_GUEST_CNT
          ) -1,
          0.00
        )
      )
    ),
    5
  ) AS TOTAL_GUEST_CNT,
  LPHLL8.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  LKP_PS2_HTL_LIMITS_LOW_8 LPHLL8
  INNER JOIN LKP_PS2_HTL_LIMITS_HIGH_7 LPHLH7 ON LPHLL8.Monotonically_Increasing_Id = LPHLH7.Monotonically_Increasing_Id
  INNER JOIN LKP_DAYS_6 LD6 ON LPHLH7.Monotonically_Increasing_Id = LD6.Monotonically_Increasing_Id
  INNER JOIN EXP_WEEK_NBR_5 EWN5 ON LD6.Monotonically_Increasing_Id = EWN5.Monotonically_Increasing_Id"""

df_9 = spark.sql(query_9)

df_9.createOrReplaceTempView("EXP_Limits_9")

# COMMAND ----------
# DBTITLE 1, LKP_PS2_HTL_WEIGHT_10


query_10 = f"""SELECT
  PHW.WEIGHT_QTY AS WEIGHT_QTY,
  EL9.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_Limits_9 EL9
  LEFT JOIN PS2_HTL_WEIGHT PHW ON PHW.WEEK_NBR = EL9.WEEK_NBR"""

df_10 = spark.sql(query_10)

df_10.createOrReplaceTempView("LKP_PS2_HTL_WEIGHT_10")

# COMMAND ----------
# DBTITLE 1, AGG_Weight_11


query_11 = f"""SELECT
  EL9.FORECAST_DAY AS FORECAST_DAY,
  EL9.LOCATION_ID AS LOCATION_ID,
  EL9.DAY_OF_WK_NBR AS DAY_OF_WK_NBR,
  EL9.WEEK_DT AS WEEK_DT,
  ROUND(SUM(EL9.DAY_GUEST_CNT * LPHW1.WEIGHT_QTY), 5) AS DAY_GUEST_CNT,
  ROUND(SUM(EL9.TOTAL_DAYCAMP_CNT * LPHW1.WEIGHT_QTY), 5) AS TOTAL_DAYCAMP_CNT,
  ROUND(SUM(EL9.TOTAL_GUEST_CNT * LPHW1.WEIGHT_QTY), 5) AS TOTAL_GUEST_CNT,
  last(LPHW1.Monotonically_Increasing_Id) AS Monotonically_Increasing_Id
FROM
  LKP_PS2_HTL_WEIGHT_10 LPHW1
  INNER JOIN EXP_Limits_9 EL9 ON LPHW1.Monotonically_Increasing_Id = EL9.Monotonically_Increasing_Id
GROUP BY
  FORECAST_DAY,
  LOCATION_ID,
  DAY_OF_WK_NBR,
  WEEK_DT"""

df_11 = spark.sql(query_11)

df_11.createOrReplaceTempView("AGG_Weight_11")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PS2_HTL_FORECAST_SWLY_TOTAL_PRE_12


query_12 = f"""SELECT
  FORECAST_DAY_DT AS FORECAST_DAY_DT,
  DAY_DT AS DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  SWLY_OVERNIGHT_KITTY_GUEST AS SWLY_OVERNIGHT_KITTY_GUEST,
  SWLY_OVERNIGHT_DOG_GUEST AS SWLY_OVERNIGHT_DOG_GUEST,
  SWLY_OVERNIGHT_WITH_DDC AS SWLY_OVERNIGHT_WITH_DDC,
  SWLY_DAY_CAMP_PLAYROOM AS SWLY_DAY_CAMP_PLAYROOM,
  SWLY_DAY_CARE AS SWLY_DAY_CARE
FROM
  PS2_HTL_FORECAST_SWLY_TOTAL_PRE"""

df_12 = spark.sql(query_12)

df_12.createOrReplaceTempView("Shortcut_to_PS2_HTL_FORECAST_SWLY_TOTAL_PRE_12")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_PS2_HTL_FORECAST_SWLY_TOTAL_PRE_13


query_13 = f"""SELECT
  FORECAST_DAY_DT AS FORECAST_DAY_DT,
  DAY_DT AS DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  SWLY_OVERNIGHT_KITTY_GUEST AS SWLY_OVERNIGHT_KITTY_GUEST,
  SWLY_OVERNIGHT_DOG_GUEST AS SWLY_OVERNIGHT_DOG_GUEST,
  SWLY_OVERNIGHT_WITH_DDC AS SWLY_OVERNIGHT_WITH_DDC,
  SWLY_DAY_CAMP_PLAYROOM AS SWLY_DAY_CAMP_PLAYROOM,
  SWLY_DAY_CARE AS SWLY_DAY_CARE,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_PS2_HTL_FORECAST_SWLY_TOTAL_PRE_12"""

df_13 = spark.sql(query_13)

df_13.createOrReplaceTempView("SQ_Shortcut_to_PS2_HTL_FORECAST_SWLY_TOTAL_PRE_13")

# COMMAND ----------
# DBTITLE 1, EXP_SWLY_Total_14


query_14 = f"""SELECT
  FORECAST_DAY_DT AS FORECAST_DAY_DT,
  LOCATION_ID AS LOCATION_ID,
  SWLY_DAY_CAMP_PLAYROOM + SWLY_DAY_CARE AS DAY_GUEST_CNT,
  SWLY_DAY_CAMP_PLAYROOM + SWLY_OVERNIGHT_WITH_DDC AS TOTAL_DAYCAMP_CNT,
  SWLY_OVERNIGHT_KITTY_GUEST + SWLY_OVERNIGHT_DOG_GUEST + SWLY_DAY_CAMP_PLAYROOM + SWLY_DAY_CARE AS TOTAL_GUEST_CNT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_PS2_HTL_FORECAST_SWLY_TOTAL_PRE_13"""

df_14 = spark.sql(query_14)

df_14.createOrReplaceTempView("EXP_SWLY_Total_14")

# COMMAND ----------
# DBTITLE 1, JNR_Final_15


query_15 = f"""SELECT
  DETAIL.FORECAST_DAY AS FORECAST_DAY,
  DETAIL.LOCATION_ID AS LOCATION_ID,
  DETAIL.DAY_OF_WK_NBR AS DAY_OF_WK_NBR,
  DETAIL.WEEK_DT AS WEEK_DT,
  DETAIL.DAY_GUEST_CNT AS DAY_GUEST_CNT,
  DETAIL.TOTAL_DAYCAMP_CNT AS TOTAL_DAYCAMP_CNT,
  DETAIL.TOTAL_GUEST_CNT AS TOTAL_GUEST_CNT,
  MASTER.FORECAST_DAY_DT AS FORECAST_DAY_DT,
  MASTER.LOCATION_ID AS LOCATION_ID1,
  MASTER.DAY_GUEST_CNT AS SWLY_DAY_GUEST_CNT,
  MASTER.TOTAL_DAYCAMP_CNT AS SWLY_TOTAL_DAYCAMP_CNT,
  MASTER.TOTAL_GUEST_CNT AS SWLY_TOTAL_GUEST_CNT,
  MASTER.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_SWLY_Total_14 MASTER
  INNER JOIN AGG_Weight_11 DETAIL ON MASTER.FORECAST_DAY_DT = DETAIL.FORECAST_DAY
  AND MASTER.LOCATION_ID = DETAIL.LOCATION_ID"""

df_15 = spark.sql(query_15)

df_15.createOrReplaceTempView("JNR_Final_15")

# COMMAND ----------
# DBTITLE 1, EXP_Final_16


query_16 = f"""SELECT
  FORECAST_DAY AS FORECAST_DAY1,
  LOCATION_ID AS LOCATION_ID1,
  IFF(
    DAY_OF_WK_NBR = 6
    OR DAY_OF_WK_NBR = 7,
    'Weekend',
    'Weekday'
  ) AS DAY_OF_WEEK,
  TRUNC(
    SWLY_DAY_GUEST_CNT + (SWLY_DAY_GUEST_CNT * DAY_GUEST_CNT)
  ) AS DAY_GUEST_CNT,
  TRUNC(
    SWLY_TOTAL_DAYCAMP_CNT + (SWLY_TOTAL_DAYCAMP_CNT * TOTAL_DAYCAMP_CNT)
  ) AS TOTAL_DAYCAMP_CNT,
  TRUNC(
    SWLY_TOTAL_GUEST_CNT + (SWLY_TOTAL_GUEST_CNT * TOTAL_GUEST_CNT)
  ) AS TOTAL_GUEST_CNT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  JNR_Final_15"""

df_16 = spark.sql(query_16)

df_16.createOrReplaceTempView("EXP_Final_16")

# COMMAND ----------
# DBTITLE 1, LKP_PS2_HTL_PLAYROOM_CAPACITY_17


query_17 = f"""SELECT
  EF1.FORECAST_DAY1 AS IN_FORECAST_DAY_DT,
  EF1.LOCATION_ID1 AS IN_LOCATION_ID,
  PHPC.LOCATION_ID AS LOCATION_ID,
  PHPC.DAY_OF_WEEK AS DAY_OF_WEEK,
  PHPC.PLAYROOM_CAP_EFF_DT AS PLAYROOM_CAP_EFF_DT,
  PHPC.PLAYROOM_CAP_END_DT AS PLAYROOM_CAP_END_DT,
  PHPC.PLAYROOM_01_CAPACITY AS PLAYROOM_01_CAPACITY,
  PHPC.PLAYROOM_02_CAPACITY AS PLAYROOM_02_CAPACITY,
  PHPC.PLAYROOM_03_CAPACITY AS PLAYROOM_03_CAPACITY,
  PHPC.PLAYROOM_04_CAPACITY AS PLAYROOM_04_CAPACITY,
  PHPC.PLAYROOM_05_CAPACITY AS PLAYROOM_05_CAPACITY,
  PHPC.PLAYROOM_06_CAPACITY AS PLAYROOM_06_CAPACITY,
  PHPC.PLAYROOM_07_CAPACITY AS PLAYROOM_07_CAPACITY,
  PHPC.PLAYROOM_08_CAPACITY AS PLAYROOM_08_CAPACITY,
  PHPC.PLAYROOM_09_CAPACITY AS PLAYROOM_09_CAPACITY,
  PHPC.PLAYROOM_10_CAPACITY AS PLAYROOM_10_CAPACITY,
  EF1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_Final_16 EF1
  LEFT JOIN PS2_HTL_PLAYROOM_CAPACITY PHPC ON PHPC.LOCATION_ID = EF1.LOCATION_ID1
  AND PHPC.DAY_OF_WEEK = EF1.PHPC.DAY_OF_WEEK
  AND PHPC.PLAYROOM_CAP_EFF_DT <= EF1.FORECAST_DAY1
  AND PHPC.PLAYROOM_CAP_END_DT >= EF1.FORECAST_DAY1"""

df_17 = spark.sql(query_17)

df_17.createOrReplaceTempView("LKP_PS2_HTL_PLAYROOM_CAPACITY_17")

# COMMAND ----------
# DBTITLE 1, EXP_CalcPlayrooms_18


query_18 = f"""SELECT
  LPHPC1.IN_FORECAST_DAY_DT AS FORECAST_DAY_DT,
  LPHPC1.IN_LOCATION_ID AS LOCATION_ID,
  EF1.DAY_GUEST_CNT AS DAY_GUEST_CNT,
  EF1.TOTAL_DAYCAMP_CNT AS TOTAL_DDC_GUEST_CNT,
  EF1.TOTAL_GUEST_CNT AS TOTAL_GUEST_CNT,
  IFF(
    ISNULL(PLAYROOM_01_CAPACITY),
    0,
    PLAYROOM_01_CAPACITY
  ) + IFF(
    ISNULL(PLAYROOM_02_CAPACITY),
    0,
    PLAYROOM_02_CAPACITY
  ) AS PLAYROOM_02_CAPACITY_AGG,
  PLAYROOM_02_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_03_CAPACITY),
    0,
    PLAYROOM_03_CAPACITY
  ) AS PLAYROOM_03_CAPACITY_AGG,
  PLAYROOM_03_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_04_CAPACITY),
    0,
    PLAYROOM_04_CAPACITY
  ) AS PLAYROOM_04_CAPACITY_AGG,
  PLAYROOM_04_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_05_CAPACITY),
    0,
    PLAYROOM_05_CAPACITY
  ) AS PLAYROOM_05_CAPACITY_AGG,
  PLAYROOM_05_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_06_CAPACITY),
    0,
    PLAYROOM_06_CAPACITY
  ) AS PLAYROOM_06_CAPACITY_AGG,
  PLAYROOM_06_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_07_CAPACITY),
    0,
    PLAYROOM_07_CAPACITY
  ) AS PLAYROOM_07_CAPACITY_AGG,
  PLAYROOM_07_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_08_CAPACITY),
    0,
    PLAYROOM_08_CAPACITY
  ) AS PLAYROOM_08_CAPACITY_AGG,
  PLAYROOM_08_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_09_CAPACITY),
    0,
    PLAYROOM_09_CAPACITY
  ) AS PLAYROOM_09_CAPACITY_AGG,
  PLAYROOM_09_CAPACITY_AGG + IFF(
    ISNULL(PLAYROOM_10_CAPACITY),
    0,
    PLAYROOM_10_CAPACITY
  ) AS PLAYROOM_10_CAPACITY_AGG,
  IFF(
    TOTAL_DDC_GUEST_CNT > PLAYROOM_10_CAPACITY_AGG,
    PLAYROOM_10_CAPACITY_AGG,
    TOTAL_DDC_GUEST_CNT
  ) AS v_TOTAL_DDC_GUEST_CNT,
  DECODE(
    TRUE,
    IFF(
      EF1.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      EF1.TOTAL_DAYCAMP_CNT
    ) <= LPHPC1.PLAYROOM_01_CAPACITY,
    1,
    IFF(
      EF1.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      EF1.TOTAL_DAYCAMP_CNT
    ) <= IFF(
      ISNULL(LPHPC1.PLAYROOM_01_CAPACITY),
      0,
      LPHPC1.PLAYROOM_01_CAPACITY
    ) + IFF(
      ISNULL(LPHPC1.PLAYROOM_02_CAPACITY),
      0,
      LPHPC1.PLAYROOM_02_CAPACITY
    ),
    2,
    IFF(
      EF1.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      EF1.TOTAL_DAYCAMP_CNT
    ) <= IFF(
      ISNULL(LPHPC1.PLAYROOM_01_CAPACITY),
      0,
      LPHPC1.PLAYROOM_01_CAPACITY
    ) + IFF(
      ISNULL(LPHPC1.PLAYROOM_02_CAPACITY),
      0,
      LPHPC1.PLAYROOM_02_CAPACITY
    ) + IFF(
      ISNULL(LPHPC1.PLAYROOM_03_CAPACITY),
      0,
      LPHPC1.PLAYROOM_03_CAPACITY
    ),
    3,
    IFF(
      EF1.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      EF1.TOTAL_DAYCAMP_CNT
    ) <= IFF(
      ISNULL(LPHPC1.PLAYROOM_01_CAPACITY),
      0,
      LPHPC1.PLAYROOM_01_CAPACITY
    ) + IFF(
      ISNULL(LPHPC1.PLAYROOM_02_CAPACITY),
      0,
      LPHPC1.PLAYROOM_02_CAPACITY
    ) + IFF(
      ISNULL(LPHPC1.PLAYROOM_03_CAPACITY),
      0,
      LPHPC1.PLAYROOM_03_CAPACITY
    ) + IFF(
      ISNULL(LPHPC1.PLAYROOM_04_CAPACITY),
      0,
      LPHPC1.PLAYROOM_04_CAPACITY
    ),
    4,
    IFF(
      EF1.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      EF1.TOTAL_DAYCAMP_CNT
    ) <= PLAYROOM_04_CAPACITY_AGG + IFF(
      ISNULL(LPHPC1.PLAYROOM_05_CAPACITY),
      0,
      LPHPC1.PLAYROOM_05_CAPACITY
    ),
    5,
    IFF(
      EF1.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      EF1.TOTAL_DAYCAMP_CNT
    ) <= PLAYROOM_05_CAPACITY_AGG + IFF(
      ISNULL(LPHPC1.PLAYROOM_06_CAPACITY),
      0,
      LPHPC1.PLAYROOM_06_CAPACITY
    ),
    6,
    IFF(
      EF1.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      EF1.TOTAL_DAYCAMP_CNT
    ) <= PLAYROOM_05_CAPACITY_AGG + IFF(
      ISNULL(LPHPC1.PLAYROOM_06_CAPACITY),
      0,
      LPHPC1.PLAYROOM_06_CAPACITY
    ) + IFF(
      ISNULL(LPHPC1.PLAYROOM_07_CAPACITY),
      0,
      LPHPC1.PLAYROOM_07_CAPACITY
    ),
    7,
    IFF(
      EF1.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      EF1.TOTAL_DAYCAMP_CNT
    ) <= PLAYROOM_07_CAPACITY_AGG + IFF(
      ISNULL(LPHPC1.PLAYROOM_08_CAPACITY),
      0,
      LPHPC1.PLAYROOM_08_CAPACITY
    ),
    8,
    IFF(
      EF1.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      EF1.TOTAL_DAYCAMP_CNT
    ) <= PLAYROOM_08_CAPACITY_AGG + IFF(
      ISNULL(LPHPC1.PLAYROOM_09_CAPACITY),
      0,
      LPHPC1.PLAYROOM_09_CAPACITY
    ),
    9,
    IFF(
      EF1.TOTAL_DAYCAMP_CNT > PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      PLAYROOM_09_CAPACITY_AGG + IFF(
        ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
        0,
        LPHPC1.PLAYROOM_10_CAPACITY
      ),
      EF1.TOTAL_DAYCAMP_CNT
    ) <= PLAYROOM_09_CAPACITY_AGG + IFF(
      ISNULL(LPHPC1.PLAYROOM_10_CAPACITY),
      0,
      LPHPC1.PLAYROOM_10_CAPACITY
    ),
    10,
    0
  ) AS REQUIRED_PLAYROOM_CNT,
  LPHPC1.Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  LKP_PS2_HTL_PLAYROOM_CAPACITY_17 LPHPC1
  INNER JOIN EXP_Final_16 EF1 ON LPHPC1.Monotonically_Increasing_Id = EF1.Monotonically_Increasing_Id"""

df_18 = spark.sql(query_18)

df_18.createOrReplaceTempView("EXP_CalcPlayrooms_18")

# COMMAND ----------
# DBTITLE 1, UPD_Total_19


query_19 = f"""SELECT
  FORECAST_DAY_DT AS FORECAST_DAY1,
  LOCATION_ID AS LOCATION_ID,
  DAY_GUEST_CNT AS DAY_GUEST_CNT,
  TOTAL_DDC_GUEST_CNT AS TOTAL_DDC_GUEST_CNT,
  TOTAL_GUEST_CNT AS TOTAL_GUEST_CNT,
  REQUIRED_PLAYROOM_CNT AS REQUIRED_PLAYROOM_CNT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  EXP_CalcPlayrooms_18"""

df_19 = spark.sql(query_19)

df_19.createOrReplaceTempView("UPD_Total_19")

# COMMAND ----------
# DBTITLE 1, PS2_HTL_FORECAST_PRE


spark.sql("""MERGE INTO PS2_HTL_FORECAST_PRE AS TARGET
USING
  UPD_Total_19 AS SOURCE ON TARGET.LOCATION_ID = SOURCE.LOCATION_ID
  AND TARGET.FORECAST_DAY_DT = SOURCE.FORECAST_DAY1
  WHEN MATCHED THEN
UPDATE
SET
  TARGET.FORECAST_DAY_DT = SOURCE.FORECAST_DAY1,
  TARGET.LOCATION_ID = SOURCE.LOCATION_ID,
  TARGET.DAY_GUEST_CNT = SOURCE.DAY_GUEST_CNT,
  TARGET.TOTAL_DDC_GUEST_CNT = SOURCE.TOTAL_DDC_GUEST_CNT,
  TARGET.TOTAL_GUEST_CNT = SOURCE.TOTAL_GUEST_CNT,
  TARGET.REQUIRED_PLAYROOM_CNT = SOURCE.REQUIRED_PLAYROOM_CNT""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_ps2_htl_forecast_pre_UPDATE3")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_ps2_htl_forecast_pre_UPDATE3", mainWorkflowId, parentName)
