# Databricks notebook source
# MAGIC %run "./udf_informatica"

# COMMAND ----------


from pyspark.sql.types import *

spark.sql("use DELTA_TRAINING")
spark.sql("set spark.sql.legacy.timeParserPolicy = LEGACY")

# COMMAND ----------
%run ./MappingUtility

# COMMAND ----------
mainWorkflowId = dbutils.widgets.get("mainWorkflowId")
mainWorkflowRunId = dbutils.widgets.get("mainWorkflowRunId")
parentName = dbutils.widgets.get("parentName")
preVariableAssignment = dbutils.widgets.get("preVariableAssignment")
postVariableAssignment = dbutils.widgets.get("postVariableAssignment")
truncTargetTableOptions = dbutils.widgets.get("truncTargetTableOptions")
variablesTableName = dbutils.widgets.get("variablesTableName")

# COMMAND ----------
#Truncate Target Tables
truncateTargetTables(truncTargetTableOptions)

# COMMAND ----------
#Pre presession variable updation
updateVariable(preVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_wfa_time_sheet_punch_pre")

# COMMAND ----------
fetchAndCreateVariables(parentName,"m_wfa_time_sheet_punch_pre", variablesTableName, mainWorkflowId)

# COMMAND ----------
# DBTITLE 1, Shortcut_to_PERSON_0


query_0 = f"""SELECT
  PERSONID AS PERSONID,
  PERSONNUM AS PERSONNUM,
  FIRSTNM AS FIRSTNM,
  MIDDLEINITIALNM AS MIDDLEINITIALNM,
  LASTNM AS LASTNM,
  FULLNM AS FULLNM,
  SEARCHFULLNM AS SEARCHFULLNM,
  SHORTNM AS SHORTNM,
  BIRTHDTM AS BIRTHDTM,
  COMPANYHIREDTM AS COMPANYHIREDTM,
  FTEPCT AS FTEPCT,
  FTSTDHRSQTY AS FTSTDHRSQTY,
  EMPSTDHRSQTY AS EMPSTDHRSQTY,
  UPDATEDTM AS UPDATEDTM,
  UPDATEDBYUSRACCTID AS UPDATEDBYUSRACCTID,
  VERSIONCNT AS VERSIONCNT,
  DELETEDSW AS DELETEDSW,
  PPSTARTDATEDTM AS PPSTARTDATEDTM,
  PPENDDATEDTM AS PPENDDATEDTM,
  CPSTARTDATEDTM AS CPSTARTDATEDTM,
  CPENDDATEDTM AS CPENDDATEDTM,
  NPSTARTDATEDTM AS NPSTARTDATEDTM,
  NPENDDATEDTM AS NPENDDATEDTM,
  FINGERREQUIREDSW AS FINGERREQUIREDSW,
  ACCRUALPROFILEID AS ACCRUALPROFILEID,
  CARRYFORWARDID AS CARRYFORWARDID,
  PAYROLLOCKTHRUDTM AS PAYROLLOCKTHRUDTM,
  MGRSIGNOFFTHRUDTM AS MGRSIGNOFFTHRUDTM,
  PENDINGSIGNOFFSW AS PENDINGSIGNOFFSW,
  MINOROVERRIDESW AS MINOROVERRIDESW,
  WFLPROFILEID AS WFLPROFILEID,
  ROMANIZEDFULLNM AS ROMANIZEDFULLNM,
  PHONETICFULLNM AS PHONETICFULLNM,
  WTKCASCPROFILEID AS WTKCASCPROFILEID,
  ISALERTSW AS ISALERTSW
FROM
  PERSON"""

df_0 = spark.sql(query_0)

df_0.createOrReplaceTempView("Shortcut_to_PERSON_0")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_WFCJOBORG_1


query_1 = f"""SELECT
  WFCJOBORGID AS WFCJOBORGID,
  WFCJOBID AS WFCJOBID,
  ORGIDSID AS ORGIDSID,
  LABORACCTID AS LABORACCTID,
  ORGPATHTXT AS ORGPATHTXT,
  ORGPATHDSCTXT AS ORGPATHDSCTXT,
  LEV1ORGIDSID AS LEV1ORGIDSID,
  LEV2ORGIDSID AS LEV2ORGIDSID,
  LEV3ORGIDSID AS LEV3ORGIDSID,
  LEV4ORGIDSID AS LEV4ORGIDSID,
  LEV5ORGIDSID AS LEV5ORGIDSID,
  LEV6ORGIDSID AS LEV6ORGIDSID,
  LEV7ORGIDSID AS LEV7ORGIDSID,
  LEV8ORGIDSID AS LEV8ORGIDSID,
  LEV9ORGIDSID AS LEV9ORGIDSID,
  LEV10ORGIDSID AS LEV10ORGIDSID,
  EFFECTIVEDTM AS EFFECTIVEDTM,
  EXPIRATIONDTM AS EXPIRATIONDTM,
  LASTACCTUPDTM AS LASTACCTUPDTM,
  ORGPATHIDTXT AS ORGPATHIDTXT,
  COMMITTEDSW AS COMMITTEDSW,
  DELETEDSW AS DELETEDSW,
  UPDATEDTM AS UPDATEDTM
FROM
  WFCJOBORG"""

df_1 = spark.sql(query_1)

df_1.createOrReplaceTempView("Shortcut_to_WFCJOBORG_1")

# COMMAND ----------
# DBTITLE 1, Shortcut_to_TIMESHEETITEM_2


query_2 = f"""SELECT
  TIMESHEETITEMID AS TIMESHEETITEMID,
  STARTPUNCHEVENTID AS STARTPUNCHEVENTID,
  ENDPUNCHEVENTID AS ENDPUNCHEVENTID,
  DELETEDSW AS DELETEDSW,
  ENTEREDONDTM AS ENTEREDONDTM,
  EMPLOYEEID AS EMPLOYEEID,
  EVENTDTM AS EVENTDTM,
  EVENTTIMEZONEID AS EVENTTIMEZONEID,
  DATASOURCEID AS DATASOURCEID,
  STARTDTM AS STARTDTM,
  ENDDTM AS ENDDTM,
  DURATIONSECSQTY AS DURATIONSECSQTY,
  MONEYEDITAMT AS MONEYEDITAMT,
  PAYCODEID AS PAYCODEID,
  LABORACCTID AS LABORACCTID,
  WORKRULEID AS WORKRULEID,
  FROMPAYCODEID AS FROMPAYCODEID,
  FROMLABORACCTID AS FROMLABORACCTID,
  ORIGINALDTM AS ORIGINALDTM,
  PAIDSW AS PAIDSW,
  IMPACTSACCRUALSSW AS IMPACTSACCRUALSSW,
  DEDUCTRULEID AS DEDUCTRULEID,
  TMSHTITEMTYPEID AS TMSHTITEMTYPEID,
  OVERRIDETYPEID AS OVERRIDETYPEID,
  WORKEDSHIFTID AS WORKEDSHIFTID,
  HASCOMMENTSW AS HASCOMMENTSW,
  STARTREASON AS STARTREASON,
  ENDREASON AS ENDREASON,
  STARTTIMEZONEID AS STARTTIMEZONEID,
  ENDTIMEZONEID AS ENDTIMEZONEID,
  NETDURATIONSECSQTY AS NETDURATIONSECSQTY,
  EXCEPTIONSW AS EXCEPTIONSW,
  CANCELDEDUCTSW AS CANCELDEDUCTSW,
  SCHEDWORKRULESW AS SCHEDWORKRULESW,
  HOLIDAYID AS HOLIDAYID,
  SCHEDAMTTYPEID AS SCHEDAMTTYPEID,
  PERSISTENTSTARTSW AS PERSISTENTSTARTSW,
  ORGIDSID AS ORGIDSID,
  FROMORGIDSID AS FROMORGIDSID,
  OVERRIDEACCRUALAMT AS OVERRIDEACCRUALAMT,
  CASCDURATIONQTY AS CASCDURATIONQTY,
  CASCTMSHTITEMID AS CASCTMSHTITEMID,
  DURATIONDAYSQTY AS DURATIONDAYSQTY,
  DURATIONTYPEID AS DURATIONTYPEID,
  MAKEUPTYPEID AS MAKEUPTYPEID,
  UPDATEDTM AS UPDATEDTM,
  CASCDURATIONDAYQTY AS CASCDURATIONDAYQTY,
  DLGTDATASOURCEID AS DLGTDATASOURCEID,
  FORCEDWAGEAMT AS FORCEDWAGEAMT,
  ORDERNUM AS ORDERNUM,
  TOTALEDVERSION AS TOTALEDVERSION
FROM
  TIMESHEETITEM"""

df_2 = spark.sql(query_2)

df_2.createOrReplaceTempView("Shortcut_to_TIMESHEETITEM_2")

# COMMAND ----------
# DBTITLE 1, SQ_Shortcut_to_VP_TIMESHTPUNCHV42_3


query_3 = f"""SELECT
  PE.PERSONNUM AS PERSONNUM,
  TI.EVENTDTM AS EVENTDATE,
  TI.STARTDTM AS STARTDTM,
  TI.ENDDTM AS ENDDTM,
  TI.TIMESHEETITEMID AS TIMESHEETITEMID,
  OJ1.ORGPATHTXT AS ORGPATHTXT,
  monotonically_increasing_id() AS Monotonically_Increasing_Id
FROM
  Shortcut_to_TIMESHEETITEM_2 TI
  INNER JOIN Shortcut_to_PERSON_0 PE ON (PE.PERSONID = TI.EMPLOYEEID)
  LEFT OUTER JOIN Shortcut_to_WFCJOBORG_1 OJ1 ON (
    TI.ORGIDSID = OJ1.ORGIDSID
    AND OJ1.EFFECTIVEDTM <= TI.EVENTDTM
    AND OJ1.EXPIRATIONDTM > TI.EVENTDTM
  )
WHERE
  TI.EVENTDTM = TO_DATE(TO_CHAR(CURRENT_DATE, 'YYYYMMDD'), 'YYYYMMDD')
  AND TI.DELETEDSW = 0
  AND (
    TI.STARTDTM IS NOT NULL
    OR TI.ENDDTM IS NOT NULL
  )"""

df_3 = spark.sql(query_3)

df_3.createOrReplaceTempView("SQ_Shortcut_to_VP_TIMESHTPUNCHV42_3")

# COMMAND ----------
# DBTITLE 1, EXP_TIME_SHEET_4


query_4 = f"""SELECT
  PERSONNUM AS PERSONNUM,
  EVENTDATE AS EVENTDATE,
  STARTDTM AS STARTDTM,
  ENDDTM AS ENDDTM,
  TIMESHEETITEMID AS TIMESHEETITEMID,
  TO_INTEGER(SUBSTR(ORGPATHTXT, INSTR(ORGPATHTXT, '/', 1, 5) + 1, 4)) AS STORE_NUMBER,
  SUBSTR(
    ORGPATHTXT,
    INSTR(ORGPATHTXT, '/', 1, 6) + 1,
    (
      (INSTR(ORGPATHTXT, '/', 1, 7) -1) - INSTR(ORGPATHTXT, '/', 1, 6)
    )
  ) AS BUSN_AREA_DESC,
  SUBSTR(
    ORGPATHTXT,
    INSTR(ORGPATHTXT, '/', 1, 7) + 1,
    (
      (INSTR(ORGPATHTXT, '/', 1, 8) -1) - INSTR(ORGPATHTXT, '/', 1, 7)
    )
  ) AS DEPT_DESC,
  SUBSTR(ORGPATHTXT, INSTR(ORGPATHTXT, '/', 1, 8) + 1, 100) AS TASK_DESC,
  now() AS LOAD_DT,
  Monotonically_Increasing_Id AS Monotonically_Increasing_Id
FROM
  SQ_Shortcut_to_VP_TIMESHTPUNCHV42_3"""

df_4 = spark.sql(query_4)

df_4.createOrReplaceTempView("EXP_TIME_SHEET_4")

# COMMAND ----------
# DBTITLE 1, WFA_TIME_SHEET_PUNCH_PRE


spark.sql("""INSERT INTO
  WFA_TIME_SHEET_PUNCH_PRE
SELECT
  EVENTDATE AS DAY_DT,
  TIMESHEETITEMID AS TIME_SHEET_ITEM_ID,
  STARTDTM AS STRT_DTM,
  ENDDTM AS END_DTM,
  STORE_NUMBER AS STORE_NBR,
  PERSONNUM AS EMPLOYEE_ID,
  BUSN_AREA_DESC AS WFA_BUSN_AREA_DESC,
  DEPT_DESC AS WFA_DEPT_DESC,
  TASK_DESC AS WFA_TASK_DESC,
  LOAD_DT AS LOAD_DT
FROM
  EXP_TIME_SHEET_4""")

# COMMAND ----------
#Post session variable updation
updateVariable(postVariableAssignment, variablesTableName, mainWorkflowId, parentName, "m_wfa_time_sheet_punch_pre")

# COMMAND ----------
#Update Mapping Variables in database.
persistVariables(variablesTableName, "m_wfa_time_sheet_punch_pre", mainWorkflowId, parentName)
